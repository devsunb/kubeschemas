{
  "description": "A package repository is a collection of packages and their metadata. Similar to a maven repository or a rpm repository, adding a package repository to a cluster gives users of that cluster the ability to install any of the packages from that repository.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "packaging.carvel.dev/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "PackageRepository"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "properties": {
        "fetch": {
          "properties": {
            "git": {
              "description": "Uses git to clone repository containing package list",
              "properties": {
                "depth": {
                  "description": "depth of commits to fetch; 1 (default) means only latest commit, 0 means everything (optional)",
                  "format": "int64",
                  "type": "integer"
                },
                "forceHTTPBasicAuth": {
                  "description": "Force the usage of HTTP Basic Auth when Basic Auth is provided (optional)",
                  "type": "boolean"
                },
                "lfsSkipSmudge": {
                  "description": "Skip lfs download (optional)",
                  "type": "boolean"
                },
                "ref": {
                  "description": "Branch, tag, commit; origin is the name of the remote (optional)",
                  "type": "string"
                },
                "refSelection": {
                  "description": "Specifies a strategy to resolve to an explicit ref (optional; v0.24.0+)",
                  "properties": {
                    "semver": {
                      "properties": {
                        "constraints": {
                          "type": "string"
                        },
                        "prereleases": {
                          "properties": {
                            "identifiers": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "secretRef": {
                  "description": "Secret with auth details. allowed keys: ssh-privatekey, ssh-knownhosts, username, password (optional) (if ssh-knownhosts is not specified, git will not perform strict host checking)",
                  "properties": {
                    "name": {
                      "description": "Object is expected to be within same namespace",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "subPath": {
                  "description": "Grab only portion of repository (optional)",
                  "type": "string"
                },
                "url": {
                  "description": "http or ssh urls are supported (required)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "http": {
              "description": "Uses http library to fetch file containing packages",
              "properties": {
                "secretRef": {
                  "description": "Secret to provide auth details (optional) Secret may include one or more keys: username, password",
                  "properties": {
                    "name": {
                      "description": "Object is expected to be within same namespace",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "sha256": {
                  "description": "Checksum to verify after download (optional)",
                  "type": "string"
                },
                "subPath": {
                  "description": "Grab only portion of download (optional)",
                  "type": "string"
                },
                "url": {
                  "description": "URL can point to one of following formats: text, tgz, zip http and https url are supported; plain file, tgz and tar types are supported (required)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "image": {
              "description": "Image url; unqualified, tagged, or digest references supported (required)",
              "properties": {
                "secretRef": {
                  "description": "Secret may include one or more keys: username, password, token. By default anonymous access is used for authentication.",
                  "properties": {
                    "name": {
                      "description": "Object is expected to be within same namespace",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "subPath": {
                  "description": "Grab only portion of image (optional)",
                  "type": "string"
                },
                "tagSelection": {
                  "description": "Specifies a strategy to choose a tag (optional; v0.24.0+) if specified, do not include a tag in url key",
                  "properties": {
                    "semver": {
                      "properties": {
                        "constraints": {
                          "type": "string"
                        },
                        "prereleases": {
                          "properties": {
                            "identifiers": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "url": {
                  "description": "Docker image url; unqualified, tagged, or digest references supported (required) Example: username/app1-config:v0.1.0",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "imgpkgBundle": {
              "description": "Pulls imgpkg bundle from Docker/OCI registry",
              "properties": {
                "image": {
                  "description": "Docker image url; unqualified, tagged, or digest references supported (required)",
                  "type": "string"
                },
                "secretRef": {
                  "description": "Secret may include one or more keys: username, password, token. By default anonymous access is used for authentication.",
                  "properties": {
                    "name": {
                      "description": "Object is expected to be within same namespace",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "tagSelection": {
                  "description": "Specifies a strategy to choose a tag (optional; v0.24.0+) if specified, do not include a tag in url key",
                  "properties": {
                    "semver": {
                      "properties": {
                        "constraints": {
                          "type": "string"
                        },
                        "prereleases": {
                          "properties": {
                            "identifiers": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "inline": {
              "description": "Pull content from within this resource; or other resources in the cluster",
              "properties": {
                "paths": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Specifies mapping of paths to their content; not recommended for sensitive values as CR is not encrypted (optional)",
                  "type": "object"
                },
                "pathsFrom": {
                  "description": "Specifies content via secrets and config maps; data values are recommended to be placed in secrets (optional)",
                  "items": {
                    "properties": {
                      "configMapRef": {
                        "properties": {
                          "directoryPath": {
                            "description": "Specifies where to place files found in secret (optional)",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "secretRef": {
                        "properties": {
                          "directoryPath": {
                            "description": "Specifies where to place files found in secret (optional)",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "paused": {
          "description": "Paused when set to true will ignore all pending changes, once it set back to false, pending changes will be applied",
          "type": "boolean"
        },
        "syncPeriod": {
          "description": "Controls frequency of PackageRepository reconciliation",
          "type": "string"
        }
      },
      "required": [
        "fetch"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "conditions": {
          "items": {
            "properties": {
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized.",
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "description": "ConditionType represents reconciler state",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "consecutiveReconcileFailures": {
          "type": "integer"
        },
        "consecutiveReconcileSuccesses": {
          "type": "integer"
        },
        "deploy": {
          "properties": {
            "error": {
              "type": "string"
            },
            "exitCode": {
              "type": "integer"
            },
            "finished": {
              "type": "boolean"
            },
            "kapp": {
              "description": "KappDeployStatus contains the associated AppCR deployed resources",
              "properties": {
                "associatedResources": {
                  "description": "AssociatedResources contains the associated App label, namespaces and GKs",
                  "properties": {
                    "groupKinds": {
                      "items": {
                        "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types",
                        "properties": {
                          "group": {
                            "type": "string"
                          },
                          "kind": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "group",
                          "kind"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "label": {
                      "type": "string"
                    },
                    "namespaces": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "startedAt": {
              "format": "date-time",
              "type": "string"
            },
            "stderr": {
              "type": "string"
            },
            "stdout": {
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "fetch": {
          "properties": {
            "error": {
              "type": "string"
            },
            "exitCode": {
              "type": "integer"
            },
            "startedAt": {
              "format": "date-time",
              "type": "string"
            },
            "stderr": {
              "type": "string"
            },
            "stdout": {
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "friendlyDescription": {
          "type": "string"
        },
        "observedGeneration": {
          "description": "Populated based on metadata.generation when controller observes a change to the resource; if this value is out of data, other status fields do not reflect latest state",
          "format": "int64",
          "type": "integer"
        },
        "template": {
          "properties": {
            "error": {
              "type": "string"
            },
            "exitCode": {
              "type": "integer"
            },
            "stderr": {
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "usefulErrorMessage": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "packaging.carvel.dev",
      "kind": "PackageRepository",
      "version": "v1alpha1"
    }
  ]
}