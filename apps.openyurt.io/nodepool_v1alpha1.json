{
  "description": "NodePool is the Schema for the nodepools API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "apps.openyurt.io/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "NodePool"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "NodePoolSpec defines the desired state of NodePool",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If specified, the Annotations will be added to all nodes.\nNOTE: existing labels with samy keys on the nodes will be overwritten.",
          "type": "object"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If specified, the Labels will be added to all nodes.\nNOTE: existing labels with samy keys on the nodes will be overwritten.",
          "type": "object"
        },
        "selector": {
          "description": "A label query over nodes to consider for adding to the pool",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "required": [
                  "key",
                  "operator"
                ],
                "type": "object"
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "taints": {
          "description": "If specified, the Taints will be added to all nodes.",
          "items": {
            "description": "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.",
            "properties": {
              "effect": {
                "description": "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Required. The taint key to be applied to a node.",
                "type": "string"
              },
              "timeAdded": {
                "description": "TimeAdded represents the time at which the taint was added.\nIt is only written for NoExecute taints.",
                "format": "date-time",
                "type": "string"
              },
              "value": {
                "description": "The taint value corresponding to the taint key.",
                "type": "string"
              }
            },
            "required": [
              "effect",
              "key"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of the NodePool",
          "type": "string"
        }
      },
      "type": "object"
    },
    "status": {
      "description": "NodePoolStatus defines the observed state of NodePool",
      "properties": {
        "nodes": {
          "description": "The list of nodes' names in the pool",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "readyNodeNum": {
          "description": "Total number of ready nodes in the pool.",
          "format": "int32",
          "type": "integer"
        },
        "unreadyNodeNum": {
          "description": "Total number of unready nodes in the pool.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "apps.openyurt.io",
      "kind": "NodePool",
      "version": "v1alpha1"
    }
  ]
}