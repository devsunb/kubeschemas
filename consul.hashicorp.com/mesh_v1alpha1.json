{
  "description": "Mesh is the Schema for the mesh API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "consul.hashicorp.com/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "Mesh"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "MeshSpec defines the desired state of Mesh.",
      "properties": {
        "allowEnablingPermissiveMutualTLS": {
          "description": "AllowEnablingPermissiveMutualTLS must be true in order to allow setting\nMutualTLSMode=permissive in either service-defaults or proxy-defaults.",
          "type": "boolean"
        },
        "http": {
          "description": "HTTP defines the HTTP configuration for the service mesh.",
          "properties": {
            "incoming": {
              "description": "Incoming configures settings for incoming HTTP traffic to mesh proxies.",
              "properties": {
                "requestNormalization": {
                  "description": "RequestNormalizationMeshConfig contains options pertaining to the\nnormalization of HTTP requests processed by mesh proxies.",
                  "properties": {
                    "headersWithUnderscoresAction": {
                      "description": "HeadersWithUnderscoresAction sets the value of the \\`headers_with_underscores_action\\` option in the Envoy\nlistener's \\`HttpConnectionManager\\` under \\`common_http_protocol_options\\`. The default value of this option is\nempty, which is equivalent to \\`ALLOW\\`. Refer to the Envoy documentation for more information on available\noptions.",
                      "type": "string"
                    },
                    "insecureDisablePathNormalization": {
                      "description": "InsecureDisablePathNormalization sets the value of the \\`normalize_path\\` option in the Envoy listener's\n`HttpConnectionManager`. The default value is \\`false\\`. When set to \\`true\\` in Consul, \\`normalize_path\\` is\nset to \\`false\\` for the Envoy proxy. This parameter disables the normalization of request URL paths according to\nRFC 3986, conversion of \\`\\\\\\` to \\`/\\`, and decoding non-reserved %-encoded characters. When using L7 intentions\nwith path match rules, we recommend enabling path normalization in order to avoid match rule circumvention with\nnon-normalized path values.",
                      "type": "boolean"
                    },
                    "mergeSlashes": {
                      "description": "MergeSlashes sets the value of the \\`merge_slashes\\` option in the Envoy listener's \\`HttpConnectionManager\\`.\nThe default value is \\`false\\`. This option controls the normalization of request URL paths by merging\nconsecutive \\`/\\` characters. This normalization is not part of RFC 3986. When using L7 intentions with path\nmatch rules, we recommend enabling this setting to avoid match rule circumvention through non-normalized path\nvalues, unless legitimate service traffic depends on allowing for repeat \\`/\\` characters, or upstream services\nare configured to differentiate between single and multiple slashes.",
                      "type": "boolean"
                    },
                    "pathWithEscapedSlashesAction": {
                      "description": "PathWithEscapedSlashesAction sets the value of the \\`path_with_escaped_slashes_action\\` option in the Envoy\nlistener's \\`HttpConnectionManager\\`. The default value of this option is empty, which is equivalent to\n\\`IMPLEMENTATION_SPECIFIC_DEFAULT\\`. This parameter controls the action taken in response to request URL paths\nwith escaped slashes in the path. When using L7 intentions with path match rules, we recommend enabling this\nsetting to avoid match rule circumvention through non-normalized path values, unless legitimate service traffic\ndepends on allowing for escaped \\`/\\` or \\`\\\\\\` characters, or upstream services are configured to differentiate\nbetween escaped and unescaped slashes. Refer to the Envoy documentation for more information on available\noptions.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sanitizeXForwardedClientCert": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "peering": {
          "description": "Peering defines the peering configuration for the service mesh.",
          "properties": {
            "peerThroughMeshGateways": {
              "description": "PeerThroughMeshGateways determines whether peering traffic between\ncontrol planes should flow through mesh gateways. If enabled,\nConsul servers will advertise mesh gateway addresses as their own.\nAdditionally, mesh gateways will configure themselves to expose\nthe local servers using a peering-specific SNI.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "tls": {
          "description": "TLS defines the TLS configuration for the service mesh.",
          "properties": {
            "incoming": {
              "description": "Incoming defines the TLS configuration for inbound mTLS connections targeting\nthe public listener on Connect and TerminatingGateway proxy kinds.",
              "properties": {
                "cipherSuites": {
                  "description": "CipherSuites sets the default list of TLS cipher suites to support when negotiating connections using TLS 1.2 or earlier.\nIf unspecified, Envoy will use a default server cipher list. The list of supported cipher suites can be seen in\nhttps://github.com/hashicorp/consul/blob/v1.11.2/types/tls.go#L154-L169 and is dependent on underlying support in Envoy.\nFuture releases of Envoy may remove currently-supported but insecure cipher suites,\nand future releases of Consul may add new supported cipher suites if any are added to Envoy.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "tlsMaxVersion": {
                  "description": "TLSMaxVersion sets the default maximum TLS version supported. Must be greater than or equal to `TLSMinVersion`.\nOne of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.\nIf unspecified, Envoy will default to TLS 1.3 as a max version for incoming connections.",
                  "type": "string"
                },
                "tlsMinVersion": {
                  "description": "TLSMinVersion sets the default minimum TLS version supported.\nOne of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.\nIf unspecified, Envoy v1.22.0 and newer will default to TLS 1.2 as a min version,\nwhile older releases of Envoy default to TLS 1.0.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "outgoing": {
              "description": "Outgoing defines the TLS configuration for outbound mTLS connections dialing upstreams\nfrom Connect and IngressGateway proxy kinds.",
              "properties": {
                "cipherSuites": {
                  "description": "CipherSuites sets the default list of TLS cipher suites to support when negotiating connections using TLS 1.2 or earlier.\nIf unspecified, Envoy will use a default server cipher list. The list of supported cipher suites can be seen in\nhttps://github.com/hashicorp/consul/blob/v1.11.2/types/tls.go#L154-L169 and is dependent on underlying support in Envoy.\nFuture releases of Envoy may remove currently-supported but insecure cipher suites,\nand future releases of Consul may add new supported cipher suites if any are added to Envoy.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "tlsMaxVersion": {
                  "description": "TLSMaxVersion sets the default maximum TLS version supported. Must be greater than or equal to `TLSMinVersion`.\nOne of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.\nIf unspecified, Envoy will default to TLS 1.3 as a max version for incoming connections.",
                  "type": "string"
                },
                "tlsMinVersion": {
                  "description": "TLSMinVersion sets the default minimum TLS version supported.\nOne of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.\nIf unspecified, Envoy v1.22.0 and newer will default to TLS 1.2 as a min version,\nwhile older releases of Envoy default to TLS 1.0.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "transparentProxy": {
          "description": "TransparentProxy controls the configuration specific to proxies in \"transparent\" mode. Added in v1.10.0.",
          "properties": {
            "meshDestinationsOnly": {
              "description": "MeshDestinationsOnly determines whether sidecar proxies operating in \"transparent\" mode can proxy traffic\nto IP addresses not registered in Consul's catalog. If enabled, traffic will only be proxied to upstreams\nwith service registrations in the catalog.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "validateClusters": {
          "description": "ValidateClusters controls whether the clusters the route table refers to are validated. The default value is\nfalse. When set to false and a route refers to a cluster that does not exist, the route table loads and routing\nto a non-existent cluster results in a 404. When set to true and the route is set to a cluster that do not exist,\nthe route table will not load. For more information, refer to\n[HTTP route configuration in the Envoy docs](https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto#envoy-v3-api-field-config-route-v3-routeconfiguration-validate-clusters)\nfor more details.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions indicate the latest available observations of a resource's current state.",
          "items": {
            "description": "Conditions define a readiness condition for a Consul resource.\nSee: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "lastSyncedTime": {
          "description": "LastSyncedTime is the last time the resource successfully synced with Consul.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "consul.hashicorp.com",
      "kind": "Mesh",
      "version": "v1alpha1"
    }
  ]
}