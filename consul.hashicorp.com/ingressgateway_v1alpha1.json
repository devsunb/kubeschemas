{
  "description": "IngressGateway is the Schema for the ingressgateways API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "consul.hashicorp.com/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "IngressGateway"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "IngressGatewaySpec defines the desired state of IngressGateway.",
      "properties": {
        "defaults": {
          "description": "Defaults is default configuration for all upstream services",
          "properties": {
            "maxConcurrentRequests": {
              "description": "The maximum number of concurrent requests that\nwill be allowed at a single point in time. Use this to limit HTTP/2 traffic,\nsince HTTP/2 has many requests per connection.",
              "format": "int32",
              "type": "integer"
            },
            "maxConnections": {
              "description": "The maximum number of connections a service instance\nwill be allowed to establish against the given upstream. Use this to limit\nHTTP/1.1 traffic, since HTTP/1.1 has a request per connection.",
              "format": "int32",
              "type": "integer"
            },
            "maxPendingRequests": {
              "description": "The maximum number of requests that will be queued\nwhile waiting for a connection to be established.",
              "format": "int32",
              "type": "integer"
            },
            "passiveHealthCheck": {
              "description": "PassiveHealthCheck configuration determines how upstream proxy instances will\nbe monitored for removal from the load balancing pool.",
              "properties": {
                "baseEjectionTime": {
                  "description": "The base time that a host is ejected for. The real time is equal to the base time\nmultiplied by the number of times the host has been ejected and is capped by\nmax_ejection_time (Default 300s). Defaults to 30s.",
                  "type": "string"
                },
                "enforcingConsecutive5xx": {
                  "description": "EnforcingConsecutive5xx is the % chance that a host will be actually ejected\nwhen an outlier status is detected through consecutive 5xx.\nThis setting can be used to disable ejection or to ramp it up slowly.\nEx. Setting this to 10 will make it a 10% chance that the host will be ejected.",
                  "format": "int32",
                  "type": "integer"
                },
                "interval": {
                  "description": "Interval between health check analysis sweeps. Each sweep may remove\nhosts or return hosts to the pool. Ex. setting this to \"10s\" will set\nthe interval to 10 seconds.",
                  "type": "string"
                },
                "maxEjectionPercent": {
                  "description": "The maximum % of an upstream cluster that can be ejected due to outlier detection.\nDefaults to 10% but will eject at least one host regardless of the value.",
                  "format": "int32",
                  "type": "integer"
                },
                "maxFailures": {
                  "description": "MaxFailures is the count of consecutive failures that results in a host\nbeing removed from the pool.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "listeners": {
          "description": "Listeners declares what ports the ingress gateway should listen on, and\nwhat services to associated to those ports.",
          "items": {
            "description": "IngressListener manages the configuration for a listener on a specific port.",
            "properties": {
              "port": {
                "description": "Port declares the port on which the ingress gateway should listen for traffic.",
                "type": "integer"
              },
              "protocol": {
                "description": "Protocol declares what type of traffic this listener is expected to\nreceive. Depending on the protocol, a listener might support multiplexing\nservices over a single port, or additional discovery chain features. The\ncurrent supported values are: (tcp | http | http2 | grpc).",
                "type": "string"
              },
              "services": {
                "description": "Services declares the set of services to which the listener forwards\ntraffic.\nFor \"tcp\" protocol listeners, only a single service is allowed.\nFor \"http\" listeners, multiple services can be declared.",
                "items": {
                  "description": "IngressService manages configuration for services that are exposed to\ningress traffic.",
                  "properties": {
                    "hosts": {
                      "description": "Hosts is a list of hostnames which should be associated to this service on\nthe defined listener. Only allowed on layer 7 protocols, this will be used\nto route traffic to the service by matching the Host header of the HTTP\nrequest.\n\n\nIf a host is provided for a service that also has a wildcard specifier\ndefined, the host will override the wildcard-specifier-provided\n\"\u003cservice-name\u003e.*\" domain for that listener.\n\n\nThis cannot be specified when using the wildcard specifier, \"*\", or when\nusing a \"tcp\" listener.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "maxConcurrentRequests": {
                      "description": "The maximum number of concurrent requests that\nwill be allowed at a single point in time. Use this to limit HTTP/2 traffic,\nsince HTTP/2 has many requests per connection.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "maxConnections": {
                      "description": "The maximum number of connections a service instance\nwill be allowed to establish against the given upstream. Use this to limit\nHTTP/1.1 traffic, since HTTP/1.1 has a request per connection.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "maxPendingRequests": {
                      "description": "The maximum number of requests that will be queued\nwhile waiting for a connection to be established.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name declares the service to which traffic should be forwarded.\n\n\nThis can either be a specific service, or the wildcard specifier,\n\"*\". If the wildcard specifier is provided, the listener must be of \"http\"\nprotocol and means that the listener will forward traffic to all services.\n\n\nA name can be specified on multiple listeners, and will be exposed on both\nof the listeners.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace is the namespace where the service is located.\nNamespacing is a Consul Enterprise feature.",
                      "type": "string"
                    },
                    "partition": {
                      "description": "Partition is the admin-partition where the service is located.\nPartitioning is a Consul Enterprise feature.",
                      "type": "string"
                    },
                    "passiveHealthCheck": {
                      "description": "PassiveHealthCheck configuration determines how upstream proxy instances will\nbe monitored for removal from the load balancing pool.",
                      "properties": {
                        "baseEjectionTime": {
                          "description": "The base time that a host is ejected for. The real time is equal to the base time\nmultiplied by the number of times the host has been ejected and is capped by\nmax_ejection_time (Default 300s). Defaults to 30s.",
                          "type": "string"
                        },
                        "enforcingConsecutive5xx": {
                          "description": "EnforcingConsecutive5xx is the % chance that a host will be actually ejected\nwhen an outlier status is detected through consecutive 5xx.\nThis setting can be used to disable ejection or to ramp it up slowly.\nEx. Setting this to 10 will make it a 10% chance that the host will be ejected.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "interval": {
                          "description": "Interval between health check analysis sweeps. Each sweep may remove\nhosts or return hosts to the pool. Ex. setting this to \"10s\" will set\nthe interval to 10 seconds.",
                          "type": "string"
                        },
                        "maxEjectionPercent": {
                          "description": "The maximum % of an upstream cluster that can be ejected due to outlier detection.\nDefaults to 10% but will eject at least one host regardless of the value.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "maxFailures": {
                          "description": "MaxFailures is the count of consecutive failures that results in a host\nbeing removed from the pool.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "requestHeaders": {
                      "description": "Allow HTTP header manipulation to be configured.",
                      "properties": {
                        "add": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Add is a set of name -\u003e value pairs that should be appended to the request\nor response (i.e. allowing duplicates if the same header already exists).",
                          "type": "object"
                        },
                        "remove": {
                          "description": "Remove is the set of header names that should be stripped from the request\nor response.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "set": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Set is a set of name -\u003e value pairs that should be added to the request or\nresponse, overwriting any existing header values of the same name.",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "responseHeaders": {
                      "description": "HTTPHeaderModifiers is a set of rules for HTTP header modification that\nshould be performed by proxies as the request passes through them. It can\noperate on either request or response headers depending on the context in\nwhich it is used.",
                      "properties": {
                        "add": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Add is a set of name -\u003e value pairs that should be appended to the request\nor response (i.e. allowing duplicates if the same header already exists).",
                          "type": "object"
                        },
                        "remove": {
                          "description": "Remove is the set of header names that should be stripped from the request\nor response.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "set": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Set is a set of name -\u003e value pairs that should be added to the request or\nresponse, overwriting any existing header values of the same name.",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "tls": {
                      "description": "TLS allows specifying some TLS configuration per listener.",
                      "properties": {
                        "sds": {
                          "description": "SDS allows configuring TLS certificate from an SDS service.",
                          "properties": {
                            "certResource": {
                              "description": "CertResource is the SDS resource name to request when fetching the certificate from the SDS service.",
                              "type": "string"
                            },
                            "clusterName": {
                              "description": "ClusterName is the SDS cluster name to connect to, to retrieve certificates.\nThis cluster must be specified in the Gateway's bootstrap configuration.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tls": {
                "description": "TLS config for this listener.",
                "properties": {
                  "cipherSuites": {
                    "description": "Define a subset of cipher suites to restrict\nOnly applicable to connections negotiated via TLS 1.2 or earlier.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "enabled": {
                    "description": "Indicates that TLS should be enabled for this gateway service.",
                    "type": "boolean"
                  },
                  "sds": {
                    "description": "SDS allows configuring TLS certificate from an SDS service.",
                    "properties": {
                      "certResource": {
                        "description": "CertResource is the SDS resource name to request when fetching the certificate from the SDS service.",
                        "type": "string"
                      },
                      "clusterName": {
                        "description": "ClusterName is the SDS cluster name to connect to, to retrieve certificates.\nThis cluster must be specified in the Gateway's bootstrap configuration.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "tlsMaxVersion": {
                    "description": "TLSMaxVersion sets the default maximum TLS version supported. Must be greater than or equal to `TLSMinVersion`.\nOne of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.\nIf unspecified, Envoy will default to TLS 1.3 as a max version for incoming connections.",
                    "type": "string"
                  },
                  "tlsMinVersion": {
                    "description": "TLSMinVersion sets the default minimum TLS version supported.\nOne of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.\nIf unspecified, Envoy v1.22.0 and newer will default to TLS 1.2 as a min version,\nwhile older releases of Envoy default to TLS 1.0.",
                    "type": "string"
                  }
                },
                "required": [
                  "enabled"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "tls": {
          "description": "TLS holds the TLS configuration for this gateway.",
          "properties": {
            "cipherSuites": {
              "description": "Define a subset of cipher suites to restrict\nOnly applicable to connections negotiated via TLS 1.2 or earlier.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "enabled": {
              "description": "Indicates that TLS should be enabled for this gateway service.",
              "type": "boolean"
            },
            "sds": {
              "description": "SDS allows configuring TLS certificate from an SDS service.",
              "properties": {
                "certResource": {
                  "description": "CertResource is the SDS resource name to request when fetching the certificate from the SDS service.",
                  "type": "string"
                },
                "clusterName": {
                  "description": "ClusterName is the SDS cluster name to connect to, to retrieve certificates.\nThis cluster must be specified in the Gateway's bootstrap configuration.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "tlsMaxVersion": {
              "description": "TLSMaxVersion sets the default maximum TLS version supported. Must be greater than or equal to `TLSMinVersion`.\nOne of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.\nIf unspecified, Envoy will default to TLS 1.3 as a max version for incoming connections.",
              "type": "string"
            },
            "tlsMinVersion": {
              "description": "TLSMinVersion sets the default minimum TLS version supported.\nOne of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.\nIf unspecified, Envoy v1.22.0 and newer will default to TLS 1.2 as a min version,\nwhile older releases of Envoy default to TLS 1.0.",
              "type": "string"
            }
          },
          "required": [
            "enabled"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions indicate the latest available observations of a resource's current state.",
          "items": {
            "description": "Conditions define a readiness condition for a Consul resource.\nSee: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "lastSyncedTime": {
          "description": "LastSyncedTime is the last time the resource successfully synced with Consul.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "consul.hashicorp.com",
      "kind": "IngressGateway",
      "version": "v1alpha1"
    }
  ]
}