{
  "description": "BgpPeer is the Schema for the bgppeers API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "network.kubesphere.io/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "BgpPeer"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "properties": {
        "addPaths": {
          "description": "original -\u003e bgp:add-paths Parameters relating to the advertisement and receipt of multiple paths for a single NLRI (add-paths).",
          "properties": {
            "sendMax": {
              "description": "original -\u003e bgp:send-max The maximum number of paths to advertise to neighbors for a single NLRI.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "config": {
          "description": "original -\u003e bgp:neighbor-address original -\u003e bgp:neighbor-config Configuration parameters relating to the BGP neighbor or group.",
          "properties": {
            "neighborAddress": {
              "description": "original -\u003e bgp:neighbor-address bgp:neighbor-address's original type is inet:ip-address. Address of the BGP peer, either in IPv4 or IPv6.",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}$",
              "type": "string"
            },
            "peerAs": {
              "description": "original -\u003e bgp:peer-as bgp:peer-as's original type is inet:as-number. AS number of the peer.",
              "format": "int32",
              "type": "integer"
            }
          },
          "required": [
            "neighborAddress",
            "peerAs"
          ],
          "type": "object"
        },
        "transport": {
          "description": "original -\u003e bgp:transport Transport session parameters for the BGP neighbor or group.",
          "properties": {
            "passiveMode": {
              "description": "original -\u003e bgp:passive-mode bgp:passive-mode's original type is boolean. Wait for peers to issue requests to open a BGP session, rather than initiating sessions from the local router.",
              "type": "boolean"
            },
            "remotePort": {
              "description": "original -\u003e gobgp:remote-port gobgp:remote-port's original type is inet:port-number.",
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "usingPortForward": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "status": {
      "description": "BgpPeerStatus defines the observed state of BgpPeer",
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "network.kubesphere.io",
      "kind": "BgpPeer",
      "version": "v1alpha1"
    }
  ]
}