{
  "description": "The MongoDBOpsManager resource allows you to deploy Ops Manager within your Kubernetes cluster",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "mongodb.com/v1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "MongoDBOpsManager"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "properties": {
        "adminCredentials": {
          "description": "AdminSecret is the secret for the first admin user to create\nhas the fields: \"Username\", \"Password\", \"FirstName\", \"LastName\"",
          "type": "string"
        },
        "applicationDatabase": {
          "properties": {
            "additionalMongodConfig": {
              "description": "AdditionalMongodConfig are additional configurations that can be passed to\neach data-bearing mongod at runtime. Uses the same structure as the mongod\nconfiguration file:\nhttps://docs.mongodb.com/manual/reference/configuration-options/",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "agent": {
              "description": "specify configuration like startup flags and automation config settings for the AutomationAgent and MonitoringAgent",
              "properties": {
                "backupAgent": {
                  "properties": {
                    "logRotate": {
                      "description": "LogRotate configures log rotation for the BackupAgent processes",
                      "properties": {
                        "sizeThresholdMB": {
                          "description": "Maximum size for an individual log file before rotation.\nOM only supports ints",
                          "type": "integer"
                        },
                        "timeThresholdHrs": {
                          "description": "Number of hours after which this MongoDB Agent rotates the log file.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "logLevel": {
                  "type": "string"
                },
                "logRotate": {
                  "description": "DEPRECATED please use mongod.logRotate",
                  "properties": {
                    "includeAuditLogsWithMongoDBLogs": {
                      "description": "set to 'true' to have the Automation Agent rotate the audit files along\nwith mongodb log files",
                      "type": "boolean"
                    },
                    "numTotal": {
                      "description": "maximum number of log files to have total",
                      "type": "integer"
                    },
                    "numUncompressed": {
                      "description": "maximum number of log files to leave uncompressed",
                      "type": "integer"
                    },
                    "percentOfDiskspace": {
                      "description": "Maximum percentage of the total disk space these log files should take up.\nThe string needs to be able to be converted to float64",
                      "type": "string"
                    },
                    "sizeThresholdMB": {
                      "description": "Maximum size for an individual log file before rotation.\nThe string needs to be able to be converted to float64.\nFractional values of MB are supported.",
                      "type": "string"
                    },
                    "timeThresholdHrs": {
                      "description": "maximum hours for an individual log file before rotation",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "sizeThresholdMB",
                    "timeThresholdHrs"
                  ],
                  "type": "object"
                },
                "maxLogFileDurationHours": {
                  "type": "integer"
                },
                "mongod": {
                  "description": "AgentLoggingMongodConfig contain settings for the mongodb processes configured by the agent",
                  "properties": {
                    "auditlogRotate": {
                      "description": "LogRotate configures audit log rotation for the mongodb processes",
                      "properties": {
                        "includeAuditLogsWithMongoDBLogs": {
                          "description": "set to 'true' to have the Automation Agent rotate the audit files along\nwith mongodb log files",
                          "type": "boolean"
                        },
                        "numTotal": {
                          "description": "maximum number of log files to have total",
                          "type": "integer"
                        },
                        "numUncompressed": {
                          "description": "maximum number of log files to leave uncompressed",
                          "type": "integer"
                        },
                        "percentOfDiskspace": {
                          "description": "Maximum percentage of the total disk space these log files should take up.\nThe string needs to be able to be converted to float64",
                          "type": "string"
                        },
                        "sizeThresholdMB": {
                          "description": "Maximum size for an individual log file before rotation.\nThe string needs to be able to be converted to float64.\nFractional values of MB are supported.",
                          "type": "string"
                        },
                        "timeThresholdHrs": {
                          "description": "maximum hours for an individual log file before rotation",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "sizeThresholdMB",
                        "timeThresholdHrs"
                      ],
                      "type": "object"
                    },
                    "logRotate": {
                      "description": "LogRotate configures log rotation for the mongodb processes",
                      "properties": {
                        "includeAuditLogsWithMongoDBLogs": {
                          "description": "set to 'true' to have the Automation Agent rotate the audit files along\nwith mongodb log files",
                          "type": "boolean"
                        },
                        "numTotal": {
                          "description": "maximum number of log files to have total",
                          "type": "integer"
                        },
                        "numUncompressed": {
                          "description": "maximum number of log files to leave uncompressed",
                          "type": "integer"
                        },
                        "percentOfDiskspace": {
                          "description": "Maximum percentage of the total disk space these log files should take up.\nThe string needs to be able to be converted to float64",
                          "type": "string"
                        },
                        "sizeThresholdMB": {
                          "description": "Maximum size for an individual log file before rotation.\nThe string needs to be able to be converted to float64.\nFractional values of MB are supported.",
                          "type": "string"
                        },
                        "timeThresholdHrs": {
                          "description": "maximum hours for an individual log file before rotation",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "sizeThresholdMB",
                        "timeThresholdHrs"
                      ],
                      "type": "object"
                    },
                    "systemLog": {
                      "description": "SystemLog configures system log of mongod",
                      "properties": {
                        "destination": {
                          "type": "string"
                        },
                        "logAppend": {
                          "type": "boolean"
                        },
                        "path": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "destination",
                        "logAppend",
                        "path"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "monitoringAgent": {
                  "properties": {
                    "logRotate": {
                      "description": "LogRotate configures log rotation for the BackupAgent processes",
                      "properties": {
                        "sizeThresholdMB": {
                          "description": "Maximum size for an individual log file before rotation.\nOM only supports ints",
                          "type": "integer"
                        },
                        "timeThresholdHrs": {
                          "description": "Number of hours after which this MongoDB Agent rotates the log file.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "readinessProbe": {
                  "properties": {
                    "environmentVariables": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "startupOptions": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "StartupParameters can be used to configure the startup parameters with which the agent starts. That also contains\nlog rotation settings as defined here:",
                  "type": "object"
                },
                "systemLog": {
                  "description": "DEPRECATED please use mongod.systemLog",
                  "properties": {
                    "destination": {
                      "type": "string"
                    },
                    "logAppend": {
                      "type": "boolean"
                    },
                    "path": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "destination",
                    "logAppend",
                    "path"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "automationConfig": {
              "description": "AutomationConfigOverride holds any fields that will be merged on top of the Automation Config\nthat the operator creates for the AppDB. Currently only the process.disabled and logRotate field is recognized.",
              "properties": {
                "processes": {
                  "items": {
                    "description": "OverrideProcess contains fields that we can override on the AutomationConfig processes.",
                    "properties": {
                      "disabled": {
                        "type": "boolean"
                      },
                      "logRotate": {
                        "description": "CrdLogRotate is the crd definition of LogRotate including fields in strings while the agent supports them as float64",
                        "properties": {
                          "includeAuditLogsWithMongoDBLogs": {
                            "description": "set to 'true' to have the Automation Agent rotate the audit files along\nwith mongodb log files",
                            "type": "boolean"
                          },
                          "numTotal": {
                            "description": "maximum number of log files to have total",
                            "type": "integer"
                          },
                          "numUncompressed": {
                            "description": "maximum number of log files to leave uncompressed",
                            "type": "integer"
                          },
                          "percentOfDiskspace": {
                            "description": "Maximum percentage of the total disk space these log files should take up.\nThe string needs to be able to be converted to float64",
                            "type": "string"
                          },
                          "sizeThresholdMB": {
                            "description": "Maximum size for an individual log file before rotation.\nThe string needs to be able to be converted to float64.\nFractional values of MB are supported.",
                            "type": "string"
                          },
                          "timeThresholdHrs": {
                            "description": "maximum hours for an individual log file before rotation",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "sizeThresholdMB",
                          "timeThresholdHrs"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "disabled",
                      "name"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "replicaSet": {
                  "properties": {
                    "settings": {
                      "description": "MapWrapper is a wrapper for a map to be used by other structs.\nThe CRD generator does not support map[string]interface{}\non the top level and hence we need to work around this with\na wrapping struct.",
                      "type": "object",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "cloudManager": {
              "properties": {
                "configMapRef": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "clusterDomain": {
              "type": "string"
            },
            "clusterSpecList": {
              "items": {
                "description": "ClusterSpecItem is the mongodb multi-cluster spec that is specific to a\nparticular Kubernetes cluster, this maps to the statefulset created in each cluster",
                "properties": {
                  "clusterName": {
                    "description": "ClusterName is name of the cluster where the MongoDB Statefulset will be scheduled, the\nname should have a one on one mapping with the service-account created in the central cluster\nto talk to the workload clusters.",
                    "type": "string"
                  },
                  "externalAccess": {
                    "description": "ExternalAccessConfiguration provides external access configuration for Multi-Cluster.",
                    "properties": {
                      "externalDomain": {
                        "description": "An external domain that is used for exposing MongoDB to the outside world.",
                        "type": "string"
                      },
                      "externalService": {
                        "description": "Provides a way to override the default (NodePort) Service",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "A map of annotations that shall be added to the externally available Service.",
                            "type": "object"
                          },
                          "spec": {
                            "description": "A wrapper for the Service spec object.",
                            "type": "object",
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "memberConfig": {
                    "description": "MemberConfig allows to specify votes, priorities and tags for each of the mongodb process.",
                    "items": {
                      "properties": {
                        "priority": {
                          "type": "string"
                        },
                        "tags": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "votes": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "members": {
                    "description": "Amount of members for this MongoDB Replica Set",
                    "type": "integer"
                  },
                  "podSpec": {
                    "properties": {
                      "persistence": {
                        "description": "Note, that this field is used by MongoDB resources only, let's keep it here for simplicity",
                        "properties": {
                          "multiple": {
                            "properties": {
                              "data": {
                                "properties": {
                                  "labelSelector": {
                                    "type": "object",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "storage": {
                                    "type": "string"
                                  },
                                  "storageClass": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "journal": {
                                "properties": {
                                  "labelSelector": {
                                    "type": "object",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "storage": {
                                    "type": "string"
                                  },
                                  "storageClass": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "logs": {
                                "properties": {
                                  "labelSelector": {
                                    "type": "object",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "storage": {
                                    "type": "string"
                                  },
                                  "storageClass": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "single": {
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "storage": {
                                "type": "string"
                              },
                              "storageClass": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "podTemplate": {
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    },
                    "type": "object"
                  },
                  "service": {
                    "description": "this is an optional service, it will get the name \"\u003crsName\u003e-service\" in case not provided",
                    "type": "string"
                  },
                  "statefulSet": {
                    "description": "StatefulSetConfiguration holds the optional custom StatefulSet\nthat should be merged into the operator created one.",
                    "properties": {
                      "metadata": {
                        "description": "StatefulSetMetadataWrapper is a wrapper around Labels and Annotations",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "spec": {
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    },
                    "required": [
                      "spec"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "members"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "connectivity": {
              "properties": {
                "replicaSetHorizons": {
                  "description": "ReplicaSetHorizons holds list of maps of horizons to be configured in each of MongoDB processes.\nHorizons map horizon names to the node addresses for each process in the replicaset, e.g.:\n [\n   {\n     \"internal\": \"my-rs-0.my-internal-domain.com:31843\",\n     \"external\": \"my-rs-0.my-external-domain.com:21467\"\n   },\n   {\n     \"internal\": \"my-rs-1.my-internal-domain.com:31843\",\n     \"external\": \"my-rs-1.my-external-domain.com:21467\"\n   },\n   ...\n ]\nThe key of each item in the map is an arbitrary, user-chosen string that\nrepresents the name of the horizon. The value of the item is the host and,\noptionally, the port that this mongod node will be connected to from.",
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "credentials": {
              "description": "Name of the Secret holding credentials information",
              "type": "string"
            },
            "featureCompatibilityVersion": {
              "type": "string"
            },
            "memberConfig": {
              "description": "MemberConfig allows to specify votes, priorities and tags for each of the mongodb process.",
              "items": {
                "properties": {
                  "priority": {
                    "type": "string"
                  },
                  "tags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "votes": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "members": {
              "description": "Amount of members for this MongoDB Replica Set",
              "maximum": 50,
              "minimum": 3,
              "type": "integer"
            },
            "monitoringAgent": {
              "description": "Specify configuration like startup flags just for the MonitoringAgent.\nThese take precedence over\nthe flags set in AutomationAgent",
              "properties": {
                "startupOptions": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "StartupParameters can be used to configure the startup parameters with which the agent starts. That also contains\nlog rotation settings as defined here:",
                  "type": "object"
                }
              },
              "required": [
                "startupOptions"
              ],
              "type": "object"
            },
            "opsManager": {
              "properties": {
                "configMapRef": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "passwordSecretKeyRef": {
              "description": "PasswordSecretKeyRef contains a reference to the secret which contains the password\nfor the mongodb-ops-manager SCRAM-SHA user",
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "podSpec": {
              "properties": {
                "persistence": {
                  "description": "Note, that this field is used by MongoDB resources only, let's keep it here for simplicity",
                  "properties": {
                    "multiple": {
                      "properties": {
                        "data": {
                          "properties": {
                            "labelSelector": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "storage": {
                              "type": "string"
                            },
                            "storageClass": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "journal": {
                          "properties": {
                            "labelSelector": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "storage": {
                              "type": "string"
                            },
                            "storageClass": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "logs": {
                          "properties": {
                            "labelSelector": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "storage": {
                              "type": "string"
                            },
                            "storageClass": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "single": {
                      "properties": {
                        "labelSelector": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "storage": {
                          "type": "string"
                        },
                        "storageClass": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "podTemplate": {
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "type": "object"
            },
            "prometheus": {
              "description": "Enables Prometheus integration on the AppDB.",
              "properties": {
                "metricsPath": {
                  "description": "Indicates path to the metrics endpoint.",
                  "pattern": "^\\/[a-z0-9]+$",
                  "type": "string"
                },
                "passwordSecretRef": {
                  "description": "Name of a Secret containing a HTTP Basic Auth Password.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the secret storing this password. Defaults to \"password\"",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the secret storing this user's password",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "port": {
                  "description": "Port where metrics endpoint will bind to. Defaults to 9216.",
                  "type": "integer"
                },
                "tlsSecretKeyRef": {
                  "description": "Name of a Secret (type kubernetes.io/tls) holding the certificates to use in the\nPrometheus endpoint.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the secret storing this password. Defaults to \"password\"",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the secret storing this user's password",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "username": {
                  "description": "HTTP Basic Auth Username for metrics endpoint.",
                  "type": "string"
                }
              },
              "required": [
                "passwordSecretRef",
                "username"
              ],
              "type": "object"
            },
            "security": {
              "properties": {
                "authentication": {
                  "description": "Authentication holds various authentication related settings that affect\nthis MongoDB resource.",
                  "properties": {
                    "agents": {
                      "description": "Agents contains authentication configuration properties for the agents",
                      "properties": {
                        "automationLdapGroupDN": {
                          "type": "string"
                        },
                        "automationPasswordSecretRef": {
                          "description": "SecretKeySelector selects a key of a Secret.",
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "automationUserName": {
                          "type": "string"
                        },
                        "clientCertificateSecretRef": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "mode": {
                          "description": "Mode is the desired Authentication mode that the agents will use",
                          "type": "string"
                        }
                      },
                      "required": [
                        "mode"
                      ],
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "ignoreUnknownUsers": {
                      "description": "IgnoreUnknownUsers maps to the inverse of auth.authoritativeSet",
                      "type": "boolean"
                    },
                    "internalCluster": {
                      "type": "string"
                    },
                    "ldap": {
                      "description": "LDAP Configuration",
                      "properties": {
                        "authzQueryTemplate": {
                          "type": "string"
                        },
                        "bindQueryPasswordSecretRef": {
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "bindQueryUser": {
                          "type": "string"
                        },
                        "caConfigMapRef": {
                          "description": "Allows to point at a ConfigMap/key with a CA file to mount on the Pod",
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "servers": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "timeoutMS": {
                          "type": "integer"
                        },
                        "transportSecurity": {
                          "enum": [
                            "tls",
                            "none"
                          ],
                          "type": "string"
                        },
                        "userCacheInvalidationInterval": {
                          "type": "integer"
                        },
                        "userToDNMapping": {
                          "type": "string"
                        },
                        "validateLDAPServerConfig": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "modes": {
                      "items": {
                        "enum": [
                          "X509",
                          "SCRAM",
                          "SCRAM-SHA-1",
                          "MONGODB-CR",
                          "SCRAM-SHA-256",
                          "LDAP"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "requireClientTLSAuthentication": {
                      "description": "Clients should present valid TLS certificates",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "type": "object"
                },
                "certsSecretPrefix": {
                  "type": "string"
                },
                "roles": {
                  "items": {
                    "properties": {
                      "authenticationRestrictions": {
                        "items": {
                          "properties": {
                            "clientSource": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "serverAddress": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "db": {
                        "type": "string"
                      },
                      "privileges": {
                        "items": {
                          "properties": {
                            "actions": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "resource": {
                              "properties": {
                                "cluster": {
                                  "type": "boolean"
                                },
                                "collection": {
                                  "type": "string"
                                },
                                "db": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "actions",
                            "resource"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "role": {
                        "type": "string"
                      },
                      "roles": {
                        "items": {
                          "properties": {
                            "db": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "db",
                            "role"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "db",
                      "role"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "tls": {
                  "properties": {
                    "additionalCertificateDomains": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ca": {
                      "description": "CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem)\nused to validate the certificates created already.",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "DEPRECATED please enable TLS by setting `security.certsSecretPrefix` or `security.tls.secretRef.prefix`.\nEnables TLS for this resource. This will make the operator try to mount a\nSecret with a defined name (\u003cresource-name\u003e-cert).\nThis is only used when enabling TLS on a MongoDB resource, and not on the\nAppDB, where TLS is configured by setting `secretRef.Name`.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "service": {
              "description": "this is an optional service, it will get the name \"\u003crsName\u003e-svc\" in case not provided",
              "type": "string"
            },
            "topology": {
              "enum": [
                "SingleCluster",
                "MultiCluster"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "Standalone",
                "ReplicaSet",
                "ShardedCluster"
              ],
              "type": "string"
            },
            "version": {
              "pattern": "^[0-9]+.[0-9]+.[0-9]+(-.+)?$|^$",
              "type": "string"
            }
          },
          "required": [
            "version"
          ],
          "type": "object"
        },
        "backup": {
          "description": "Backup",
          "properties": {
            "assignmentLabels": {
              "description": "Assignment Labels set in the Ops Manager",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "blockStores": {
              "items": {
                "description": "DataStoreConfig is the description of the config used to reference to database. Reused by Oplog and Block stores\nOptionally references the user if the Mongodb is configured with authentication",
                "properties": {
                  "assignmentLabels": {
                    "description": "Assignment Labels set in the Ops Manager",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "mongodbResourceRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "mongodbUserRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "mongodbResourceRef",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "enabled": {
              "description": "Enabled indicates if Backups will be enabled for this Ops Manager.",
              "type": "boolean"
            },
            "encryption": {
              "description": "Encryption settings",
              "properties": {
                "kmip": {
                  "description": "Kmip corresponds to the KMIP configuration assigned to the Ops Manager Project's configuration.",
                  "properties": {
                    "server": {
                      "description": "KMIP Server configuration",
                      "properties": {
                        "ca": {
                          "description": "CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem)\nused for KMIP authentication",
                          "type": "string"
                        },
                        "url": {
                          "description": "KMIP Server url in the following format: hostname:port\nValid examples are:\n  10.10.10.3:5696\n  my-kmip-server.mycorp.com:5696\n  kmip-svc.svc.cluster.local:5696",
                          "pattern": "[^\\:]+:[0-9]{0,5}",
                          "type": "string"
                        }
                      },
                      "required": [
                        "ca",
                        "url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "server"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "externalServiceEnabled": {
              "type": "boolean"
            },
            "fileSystemStores": {
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "headDB": {
              "description": "HeadDB specifies configuration options for the HeadDB",
              "properties": {
                "labelSelector": {
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "storage": {
                  "type": "string"
                },
                "storageClass": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "jvmParameters": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "logging": {
              "properties": {
                "LogBackAccessRef": {
                  "description": "LogBackAccessRef points at a ConfigMap/key with the logback access configuration file to mount on the Pod",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "LogBackRef": {
                  "description": "LogBackRef points at a ConfigMap/key with the logback configuration file to mount on the Pod",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "members": {
              "description": "Members indicate the number of backup daemon pods to create.",
              "minimum": 1,
              "type": "integer"
            },
            "opLogStores": {
              "description": "OplogStoreConfigs describes the list of oplog store configs used for backup",
              "items": {
                "description": "DataStoreConfig is the description of the config used to reference to database. Reused by Oplog and Block stores\nOptionally references the user if the Mongodb is configured with authentication",
                "properties": {
                  "assignmentLabels": {
                    "description": "Assignment Labels set in the Ops Manager",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "mongodbResourceRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "mongodbUserRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "mongodbResourceRef",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "queryableBackupSecretRef": {
              "description": "QueryableBackupSecretRef references the secret which contains the pem file which is used\nfor queryable backup. This will be mounted into the Ops Manager pod.",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "s3OpLogStores": {
              "description": "S3OplogStoreConfigs describes the list of s3 oplog store configs used for backup.",
              "items": {
                "properties": {
                  "assignmentLabels": {
                    "description": "Assignment Labels set in the Ops Manager",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "customCertificate": {
                    "description": "Set this to \"true\" to use the appDBCa as a CA to access S3.\nDeprecated: This has been replaced by CustomCertificateSecretRefs,\nIn the future all custom certificates, which includes the appDBCa\nfor s3Config should be configured in CustomCertificateSecretRefs instead.",
                    "type": "boolean"
                  },
                  "customCertificateSecretRefs": {
                    "description": "CustomCertificateSecretRefs is a list of valid Certificate Authority certificate secrets\nthat apply to the associated S3 bucket.",
                    "items": {
                      "description": "SecretKeySelector selects a key of a Secret.",
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "key"
                      ],
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    },
                    "type": "array"
                  },
                  "irsaEnabled": {
                    "description": "This is only set to \"true\" when a user is running in EKS and is using AWS IRSA to configure\nS3 snapshot store. For more details refer this: https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/",
                    "type": "boolean"
                  },
                  "mongodbResourceRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "mongodbUserRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "pathStyleAccessEnabled": {
                    "type": "boolean"
                  },
                  "s3BucketEndpoint": {
                    "type": "string"
                  },
                  "s3BucketName": {
                    "type": "string"
                  },
                  "s3RegionOverride": {
                    "type": "string"
                  },
                  "s3SecretRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "pathStyleAccessEnabled",
                  "s3BucketEndpoint",
                  "s3BucketName",
                  "s3SecretRef"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "s3Stores": {
              "items": {
                "properties": {
                  "assignmentLabels": {
                    "description": "Assignment Labels set in the Ops Manager",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "customCertificate": {
                    "description": "Set this to \"true\" to use the appDBCa as a CA to access S3.\nDeprecated: This has been replaced by CustomCertificateSecretRefs,\nIn the future all custom certificates, which includes the appDBCa\nfor s3Config should be configured in CustomCertificateSecretRefs instead.",
                    "type": "boolean"
                  },
                  "customCertificateSecretRefs": {
                    "description": "CustomCertificateSecretRefs is a list of valid Certificate Authority certificate secrets\nthat apply to the associated S3 bucket.",
                    "items": {
                      "description": "SecretKeySelector selects a key of a Secret.",
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "key"
                      ],
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    },
                    "type": "array"
                  },
                  "irsaEnabled": {
                    "description": "This is only set to \"true\" when a user is running in EKS and is using AWS IRSA to configure\nS3 snapshot store. For more details refer this: https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/",
                    "type": "boolean"
                  },
                  "mongodbResourceRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "mongodbUserRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "pathStyleAccessEnabled": {
                    "type": "boolean"
                  },
                  "s3BucketEndpoint": {
                    "type": "string"
                  },
                  "s3BucketName": {
                    "type": "string"
                  },
                  "s3RegionOverride": {
                    "type": "string"
                  },
                  "s3SecretRef": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "pathStyleAccessEnabled",
                  "s3BucketEndpoint",
                  "s3BucketName",
                  "s3SecretRef"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "statefulSet": {
              "description": "StatefulSetConfiguration holds the optional custom StatefulSet\nthat should be merged into the operator created one.",
              "properties": {
                "metadata": {
                  "description": "StatefulSetMetadataWrapper is a wrapper around Labels and Annotations",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "required": [
                "spec"
              ],
              "type": "object"
            }
          },
          "required": [
            "enabled"
          ],
          "type": "object"
        },
        "clusterDomain": {
          "format": "hostname",
          "type": "string"
        },
        "clusterName": {
          "description": "Deprecated: This has been replaced by the ClusterDomain which should be\nused instead",
          "format": "hostname",
          "type": "string"
        },
        "clusterSpecList": {
          "items": {
            "description": "ClusterSpecOMItem defines members cluster details for Ops Manager multi-cluster deployment.",
            "properties": {
              "backup": {
                "description": "Backup contains settings to override from top-level `spec.backup` for this member cluster.\nIf the value is not set here, then the value is taken from `spec.backup`.",
                "properties": {
                  "assignmentLabels": {
                    "description": "Assignment Labels set in the Ops Manager",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "headDB": {
                    "description": "HeadDB specifies configuration options for the HeadDB",
                    "properties": {
                      "labelSelector": {
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "storage": {
                        "type": "string"
                      },
                      "storageClass": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "jvmParameters": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "members": {
                    "description": "Members indicate the number of backup daemon pods to create.",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "statefulSet": {
                    "description": "StatefulSetConfiguration specified optional overrides for backup datemon statefulset.",
                    "properties": {
                      "metadata": {
                        "description": "StatefulSetMetadataWrapper is a wrapper around Labels and Annotations",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "spec": {
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    },
                    "required": [
                      "spec"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "clusterDomain": {
                "description": "Cluster domain to override the default *.svc.cluster.local if the default cluster domain has been changed on a cluster level.",
                "format": "hostname",
                "type": "string"
              },
              "clusterName": {
                "description": "ClusterName is name of the cluster where the Ops Manager Statefulset will be scheduled.\nThe operator is using ClusterName to find API credentials in `mongodb-enterprise-operator-member-list` config map to use for this member cluster.\nIf the credentials are not found, then the member cluster is considered unreachable and ignored in the reconcile process.",
                "type": "string"
              },
              "configuration": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The configuration properties passed to Ops Manager and Backup Daemon in this cluster.\nIf specified (not empty) then this field overrides `spec.configuration` field entirely.\nIf not specified, then `spec.configuration` field is used for the Ops Manager and Backup Daemon instances in this cluster.",
                "type": "object"
              },
              "externalConnectivity": {
                "description": "MongoDBOpsManagerExternalConnectivity if sets allows for the creation of a Service for\naccessing Ops Manager instances in this member cluster from outside the Kubernetes cluster.\nIf specified (even if provided empty) then this field overrides `spec.externalConnectivity` field entirely.\nIf not specified, then `spec.externalConnectivity` field is used for the Ops Manager and Backup Daemon instances in this cluster.",
                "properties": {
                  "annotations": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Annotations is a list of annotations to be directly passed to the Service object.",
                    "type": "object"
                  },
                  "clusterIP": {
                    "description": "ClusterIP IP that will be assigned to this Service when creating a ClusterIP type Service",
                    "type": "string"
                  },
                  "externalTrafficPolicy": {
                    "description": "ExternalTrafficPolicy mechanism to preserve the client source IP.\nOnly supported on GCE and Google Kubernetes Engine.",
                    "enum": [
                      "Cluster",
                      "Local"
                    ],
                    "type": "string"
                  },
                  "loadBalancerIP": {
                    "description": "LoadBalancerIP IP that will be assigned to this LoadBalancer.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Port in which this `Service` will listen to, this applies to `NodePort`.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type of the `Service` to be created.",
                    "enum": [
                      "LoadBalancer",
                      "NodePort",
                      "ClusterIP"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "type": "object"
              },
              "jvmParameters": {
                "description": "JVM parameters to pass to Ops Manager and Backup Daemon instances in this member cluster.\nIf specified (not empty) then this field overrides `spec.jvmParameters` field entirely.\nIf not specified, then `spec.jvmParameters` field is used for the Ops Manager and Backup Daemon instances in this cluster.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "members": {
                "description": "Number of Ops Manager instances in this member cluster.",
                "type": "integer"
              },
              "statefulSet": {
                "description": "Configure custom StatefulSet configuration to override in Ops Manager's statefulset in this member cluster.\nIf specified (even if provided empty) then this field overrides `spec.externalConnectivity` field entirely.\nIf not specified, then `spec.externalConnectivity` field is used for the Ops Manager and Backup Daemon instances in this cluster.",
                "properties": {
                  "metadata": {
                    "description": "StatefulSetMetadataWrapper is a wrapper around Labels and Annotations",
                    "properties": {
                      "annotations": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "labels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "spec": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "required": [
                  "spec"
                ],
                "type": "object"
              }
            },
            "required": [
              "members"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "configuration": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The configuration properties passed to Ops Manager/Backup Daemon",
          "type": "object"
        },
        "externalConnectivity": {
          "description": "MongoDBOpsManagerExternalConnectivity if sets allows for the creation of a Service for\naccessing this Ops Manager resource from outside the Kubernetes cluster.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations is a list of annotations to be directly passed to the Service object.",
              "type": "object"
            },
            "clusterIP": {
              "description": "ClusterIP IP that will be assigned to this Service when creating a ClusterIP type Service",
              "type": "string"
            },
            "externalTrafficPolicy": {
              "description": "ExternalTrafficPolicy mechanism to preserve the client source IP.\nOnly supported on GCE and Google Kubernetes Engine.",
              "enum": [
                "Cluster",
                "Local"
              ],
              "type": "string"
            },
            "loadBalancerIP": {
              "description": "LoadBalancerIP IP that will be assigned to this LoadBalancer.",
              "type": "string"
            },
            "port": {
              "description": "Port in which this `Service` will listen to, this applies to `NodePort`.",
              "format": "int32",
              "type": "integer"
            },
            "type": {
              "description": "Type of the `Service` to be created.",
              "enum": [
                "LoadBalancer",
                "NodePort",
                "ClusterIP"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        "internalConnectivity": {
          "description": "InternalConnectivity if set allows for overriding the settings of the default service\nused for internal connectivity to the OpsManager servers.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations is a list of annotations to be directly passed to the Service object.",
              "type": "object"
            },
            "clusterIP": {
              "description": "ClusterIP IP that will be assigned to this Service when creating a ClusterIP type Service",
              "type": "string"
            },
            "externalTrafficPolicy": {
              "description": "ExternalTrafficPolicy mechanism to preserve the client source IP.\nOnly supported on GCE and Google Kubernetes Engine.",
              "enum": [
                "Cluster",
                "Local"
              ],
              "type": "string"
            },
            "loadBalancerIP": {
              "description": "LoadBalancerIP IP that will be assigned to this LoadBalancer.",
              "type": "string"
            },
            "port": {
              "description": "Port in which this `Service` will listen to, this applies to `NodePort`.",
              "format": "int32",
              "type": "integer"
            },
            "type": {
              "description": "Type of the `Service` to be created.",
              "enum": [
                "LoadBalancer",
                "NodePort",
                "ClusterIP"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        "jvmParameters": {
          "description": "Custom JVM parameters passed to the Ops Manager JVM",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "logging": {
          "properties": {
            "LogBackAccessRef": {
              "description": "LogBackAccessRef points at a ConfigMap/key with the logback access configuration file to mount on the Pod",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "LogBackRef": {
              "description": "LogBackRef points at a ConfigMap/key with the logback configuration file to mount on the Pod",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "opsManagerURL": {
          "description": "OpsManagerURL specified the URL with which the operator and AppDB monitoring agent should access Ops Manager instance (or instances).\nWhen not set, the operator is using FQDN of Ops Manager's headless service `{name}-svc.{namespace}.svc.cluster.local` to connect to the instance. If that URL cannot be used, then URL in this field should be provided for the operator to connect to Ops Manager instances.\nIt defaults (and if not set) to SingleCluster. If MultiCluster specified,\nthen clusterSpecList field is mandatory and at least one member cluster has to be specified.",
          "type": "string"
        },
        "replicas": {
          "minimum": 1,
          "type": "integer"
        },
        "security": {
          "description": "Configure HTTPS.",
          "properties": {
            "certsSecretPrefix": {
              "type": "string"
            },
            "tls": {
              "properties": {
                "ca": {
                  "type": "string"
                },
                "secretRef": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "statefulSet": {
          "description": "Configure custom StatefulSet configuration",
          "properties": {
            "metadata": {
              "description": "StatefulSetMetadataWrapper is a wrapper around Labels and Annotations",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "spec": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "required": [
            "spec"
          ],
          "type": "object"
        },
        "topology": {
          "description": "Topology sets the desired cluster topology of Ops Manager deployment.\nIt defaults (and if not set) to SingleCluster. If MultiCluster specified,\nthen clusterSpecList field is mandatory and at least one member cluster has to be specified.",
          "enum": [
            "SingleCluster",
            "MultiCluster"
          ],
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "applicationDatabase",
        "version"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "applicationDatabase": {
          "properties": {
            "backup": {
              "properties": {
                "statusName": {
                  "type": "string"
                }
              },
              "required": [
                "statusName"
              ],
              "type": "object"
            },
            "clusterStatusList": {
              "items": {
                "properties": {
                  "clusterName": {
                    "type": "string"
                  },
                  "members": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "configServerCount": {
              "type": "integer"
            },
            "featureCompatibilityVersion": {
              "type": "string"
            },
            "lastTransition": {
              "type": "string"
            },
            "link": {
              "type": "string"
            },
            "members": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            },
            "mongodsPerShardCount": {
              "type": "integer"
            },
            "mongosCount": {
              "type": "integer"
            },
            "observedGeneration": {
              "format": "int64",
              "type": "integer"
            },
            "phase": {
              "type": "string"
            },
            "pvc": {
              "items": {
                "properties": {
                  "phase": {
                    "type": "string"
                  },
                  "statefulsetName": {
                    "type": "string"
                  }
                },
                "required": [
                  "phase",
                  "statefulsetName"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "resourcesNotReady": {
              "items": {
                "description": "ResourceNotReady describes the dependent resource which is not ready yet",
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "kind": {
                    "description": "ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource",
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "shardCount": {
              "type": "integer"
            },
            "sizeStatusInClusters": {
              "description": "MongodbShardedSizeStatusInClusters describes the number and sizes of replica sets members deployed across member clusters",
              "properties": {
                "configServerMongodsInClusters": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object"
                },
                "mongosCountInClusters": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object"
                },
                "shardMongodsInClusters": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object"
                },
                "shardOverridesInClusters": {
                  "additionalProperties": {
                    "additionalProperties": {
                      "type": "integer"
                    },
                    "type": "object"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "version": {
              "type": "string"
            },
            "warnings": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "phase",
            "version"
          ],
          "type": "object"
        },
        "backup": {
          "properties": {
            "clusterStatusList": {
              "items": {
                "properties": {
                  "clusterName": {
                    "type": "string"
                  },
                  "replicas": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "lastTransition": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "observedGeneration": {
              "format": "int64",
              "type": "integer"
            },
            "phase": {
              "type": "string"
            },
            "pvc": {
              "items": {
                "properties": {
                  "phase": {
                    "type": "string"
                  },
                  "statefulsetName": {
                    "type": "string"
                  }
                },
                "required": [
                  "phase",
                  "statefulsetName"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "resourcesNotReady": {
              "items": {
                "description": "ResourceNotReady describes the dependent resource which is not ready yet",
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "kind": {
                    "description": "ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource",
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "version": {
              "type": "string"
            },
            "warnings": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "phase"
          ],
          "type": "object"
        },
        "opsManager": {
          "properties": {
            "clusterStatusList": {
              "items": {
                "properties": {
                  "clusterName": {
                    "type": "string"
                  },
                  "replicas": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "lastTransition": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "observedGeneration": {
              "format": "int64",
              "type": "integer"
            },
            "phase": {
              "type": "string"
            },
            "pvc": {
              "items": {
                "properties": {
                  "phase": {
                    "type": "string"
                  },
                  "statefulsetName": {
                    "type": "string"
                  }
                },
                "required": [
                  "phase",
                  "statefulsetName"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "replicas": {
              "type": "integer"
            },
            "resourcesNotReady": {
              "items": {
                "description": "ResourceNotReady describes the dependent resource which is not ready yet",
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "kind": {
                    "description": "ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource",
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "url": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "warnings": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "phase"
          ],
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "mongodb.com",
      "kind": "MongoDBOpsManager",
      "version": "v1"
    }
  ]
}