{
  "description": "PersistentPodState is the Schema for the PersistentPodState API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "apps.kruise.io/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "PersistentPodState"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "PersistentPodStateSpec defines the desired state of PersistentPodState",
      "properties": {
        "persistentPodAnnotations": {
          "description": "Persist the annotations information of the pods that need to be saved",
          "items": {
            "properties": {
              "key": {
                "type": "string"
              }
            },
            "required": [
              "key"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "persistentPodStateRetentionPolicy": {
          "description": "PersistentPodStateRetentionPolicy describes the policy used for PodState.\nThe default policy of 'WhenScaled' causes when scale down statefulSet, deleting it.",
          "type": "string"
        },
        "preferredPersistentTopology": {
          "description": "Pod rebuilt topology preferred for node labels, with xx weight\nfor example  kubernetes.io/hostname, failure-domain.beta.kubernetes.io/zone",
          "items": {
            "properties": {
              "preference": {
                "properties": {
                  "nodeTopologyKeys": {
                    "description": "A list of node selector requirements by node's labels.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "nodeTopologyKeys"
                ],
                "type": "object"
              },
              "weight": {
                "format": "int32",
                "type": "integer"
              }
            },
            "required": [
              "preference",
              "weight"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "requiredPersistentTopology": {
          "description": "Pod rebuilt topology required for node labels\nfor example kubernetes.io/hostname, failure-domain.beta.kubernetes.io/zone",
          "properties": {
            "nodeTopologyKeys": {
              "description": "A list of node selector requirements by node's labels.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "nodeTopologyKeys"
          ],
          "type": "object"
        },
        "targetRef": {
          "description": "TargetReference contains enough information to let you identify an workload for PersistentPodState\nSelector and TargetReference are mutually exclusive, TargetReference is priority to take effect\ncurrent only support StatefulSet",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          },
          "required": [
            "apiVersion",
            "kind",
            "name"
          ],
          "type": "object"
        }
      },
      "required": [
        "targetRef"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this PersistentPodState. It corresponds to the\nPersistentPodState's generation, which is updated on mutation by the API Server.",
          "format": "int64",
          "type": "integer"
        },
        "podStates": {
          "additionalProperties": {
            "properties": {
              "annotations": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "pod persistent annotations",
                "type": "object"
              },
              "nodeName": {
                "description": "pod.spec.nodeName",
                "type": "string"
              },
              "nodeTopologyLabels": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "node topology labels key=value\nfor example kubernetes.io/hostname=node-1",
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": "When the pod is ready, record some status information of the pod, such as: labels, annotations, topologies, etc.\nmap[string]PodState -\u003e map[Pod.Name]PodState",
          "type": "object"
        }
      },
      "required": [
        "observedGeneration"
      ],
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "apps.kruise.io",
      "kind": "PersistentPodState",
      "version": "v1alpha1"
    }
  ]
}