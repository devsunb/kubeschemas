{
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "crd.antrea.io/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "SupportBundleCollection"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "anyOf": [
        {
          "required": [
            "nodes"
          ]
        },
        {
          "required": [
            "externalNodes"
          ]
        }
      ],
      "properties": {
        "authentication": {
          "properties": {
            "authSecret": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "authType": {
              "enum": [
                "BearerToken",
                "APIKey"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "expirationMinutes": {
          "default": 60,
          "type": "integer"
        },
        "externalNodes": {
          "properties": {
            "namespace": {
              "type": "string"
            },
            "nodeNames": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "nodeSelector": {
              "properties": {
                "matchExpressions": {
                  "items": {
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "enum": [
                          "In",
                          "NotIn",
                          "Exists",
                          "DoesNotExist"
                        ],
                        "type": "string"
                      },
                      "values": {
                        "items": {
                          "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "matchLabels": {
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "type": "object"
            }
          },
          "required": [
            "namespace"
          ],
          "type": "object"
        },
        "fileServer": {
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "nodes": {
          "properties": {
            "nodeNames": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "nodeSelector": {
              "properties": {
                "matchExpressions": {
                  "items": {
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "enum": [
                          "In",
                          "NotIn",
                          "Exists",
                          "DoesNotExist"
                        ],
                        "type": "string"
                      },
                      "values": {
                        "items": {
                          "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "matchLabels": {
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sinceTime": {
          "format": "duration",
          "type": "string"
        }
      },
      "required": [
        "fileServer",
        "authentication"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "collectedNodes": {
          "type": "integer"
        },
        "conditions": {
          "items": {
            "properties": {
              "lastTransitionTime": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "desiredNodes": {
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "crd.antrea.io",
      "kind": "SupportBundleCollection",
      "version": "v1alpha1"
    }
  ]
}