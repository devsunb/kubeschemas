{
  "description": "RateLimitPolicy enables rate limiting for service workloads in a Gateway API network",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "kuadrant.io/v1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "RateLimitPolicy"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "properties": {
        "defaults": {
          "description": "Rules to apply as defaults. Can be overridden by more specific policiy rules lower in the hierarchy and by less specific policy overrides.\nUse one of: defaults, overrides, or bare set of policy rules (implicit defaults).",
          "properties": {
            "limits": {
              "additionalProperties": {
                "description": "Limit represents a complete rate limit configuration",
                "properties": {
                  "counters": {
                    "description": "Counters defines additional rate limit counters based on CEL expressions which can reference well known selectors",
                    "items": {
                      "properties": {
                        "expression": {
                          "description": "Expression defines one CEL expression\nExpression can use well known attributes\nAttributes: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes\nWell-known selectors: https://github.com/Kuadrant/architecture/blob/main/rfcs/0001-rlp-v2.md#well-known-selectors\nThey are named by a dot-separated path (e.g. request.path)\nExample: \"request.path\" -\u003e The path portion of the URL",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "expression"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "rates": {
                    "description": "Rates holds the list of limit rates",
                    "items": {
                      "description": "Rate defines the actual rate limit that will be used when there is a match",
                      "properties": {
                        "limit": {
                          "description": "Limit defines the max value allowed for a given period of time",
                          "type": "integer"
                        },
                        "window": {
                          "description": "Window defines the time period for which the Limit specified above applies.",
                          "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "limit",
                        "window"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "when": {
                    "description": "When holds a list of \"limit-level\" `Predicate`s\nCalled also \"soft\" conditions as route selectors must also match",
                    "items": {
                      "description": "Predicate defines one CEL expression that must be evaluated to bool",
                      "properties": {
                        "predicate": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "predicate"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "description": "Limits holds the struct of limits indexed by a unique name",
              "type": "object"
            },
            "strategy": {
              "default": "atomic",
              "description": "Strategy defines the merge strategy to apply when merging this policy with other policies.",
              "enum": [
                "atomic",
                "merge"
              ],
              "type": "string"
            },
            "when": {
              "description": "Overall conditions for the policy to be enforced.\nIf omitted, the policy will be enforced at all requests to the protected routes.\nIf present, all conditions must match for the policy to be enforced.",
              "items": {
                "description": "Predicate defines one CEL expression that must be evaluated to bool",
                "properties": {
                  "predicate": {
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "predicate"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "limits": {
          "additionalProperties": {
            "description": "Limit represents a complete rate limit configuration",
            "properties": {
              "counters": {
                "description": "Counters defines additional rate limit counters based on CEL expressions which can reference well known selectors",
                "items": {
                  "properties": {
                    "expression": {
                      "description": "Expression defines one CEL expression\nExpression can use well known attributes\nAttributes: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes\nWell-known selectors: https://github.com/Kuadrant/architecture/blob/main/rfcs/0001-rlp-v2.md#well-known-selectors\nThey are named by a dot-separated path (e.g. request.path)\nExample: \"request.path\" -\u003e The path portion of the URL",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "expression"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "rates": {
                "description": "Rates holds the list of limit rates",
                "items": {
                  "description": "Rate defines the actual rate limit that will be used when there is a match",
                  "properties": {
                    "limit": {
                      "description": "Limit defines the max value allowed for a given period of time",
                      "type": "integer"
                    },
                    "window": {
                      "description": "Window defines the time period for which the Limit specified above applies.",
                      "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "limit",
                    "window"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "when": {
                "description": "When holds a list of \"limit-level\" `Predicate`s\nCalled also \"soft\" conditions as route selectors must also match",
                "items": {
                  "description": "Predicate defines one CEL expression that must be evaluated to bool",
                  "properties": {
                    "predicate": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "predicate"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "description": "Limits holds the struct of limits indexed by a unique name",
          "type": "object"
        },
        "overrides": {
          "description": "Rules to apply as overrides. Override all policy rules lower in the hierarchy. Can be overridden by less specific policy overrides.\nUse one of: defaults, overrides, or bare set of policy rules (implicit defaults).",
          "properties": {
            "limits": {
              "additionalProperties": {
                "description": "Limit represents a complete rate limit configuration",
                "properties": {
                  "counters": {
                    "description": "Counters defines additional rate limit counters based on CEL expressions which can reference well known selectors",
                    "items": {
                      "properties": {
                        "expression": {
                          "description": "Expression defines one CEL expression\nExpression can use well known attributes\nAttributes: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes\nWell-known selectors: https://github.com/Kuadrant/architecture/blob/main/rfcs/0001-rlp-v2.md#well-known-selectors\nThey are named by a dot-separated path (e.g. request.path)\nExample: \"request.path\" -\u003e The path portion of the URL",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "expression"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "rates": {
                    "description": "Rates holds the list of limit rates",
                    "items": {
                      "description": "Rate defines the actual rate limit that will be used when there is a match",
                      "properties": {
                        "limit": {
                          "description": "Limit defines the max value allowed for a given period of time",
                          "type": "integer"
                        },
                        "window": {
                          "description": "Window defines the time period for which the Limit specified above applies.",
                          "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "limit",
                        "window"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "when": {
                    "description": "When holds a list of \"limit-level\" `Predicate`s\nCalled also \"soft\" conditions as route selectors must also match",
                    "items": {
                      "description": "Predicate defines one CEL expression that must be evaluated to bool",
                      "properties": {
                        "predicate": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "predicate"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "description": "Limits holds the struct of limits indexed by a unique name",
              "type": "object"
            },
            "strategy": {
              "default": "atomic",
              "description": "Strategy defines the merge strategy to apply when merging this policy with other policies.",
              "enum": [
                "atomic",
                "merge"
              ],
              "type": "string"
            },
            "when": {
              "description": "Overall conditions for the policy to be enforced.\nIf omitted, the policy will be enforced at all requests to the protected routes.\nIf present, all conditions must match for the policy to be enforced.",
              "items": {
                "description": "Predicate defines one CEL expression that must be evaluated to bool",
                "properties": {
                  "predicate": {
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "predicate"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "targetRef": {
          "description": "Reference to the object to which this policy applies.",
          "properties": {
            "group": {
              "description": "Group is the group of the target resource.",
              "maxLength": 253,
              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
              "type": "string"
            },
            "kind": {
              "description": "Kind is kind of the target resource.",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
              "type": "string"
            },
            "name": {
              "description": "Name is the name of the target resource.",
              "maxLength": 253,
              "minLength": 1,
              "type": "string"
            },
            "sectionName": {
              "description": "SectionName is the name of a section within the target resource. When\nunspecified, this targetRef targets the entire resource. In the following\nresources, SectionName is interpreted as the following:\n\n* Gateway: Listener name\n* HTTPRoute: HTTPRouteRule name\n* Service: Port name\n\nIf a SectionName is specified, but does not exist on the targeted object,\nthe Policy must fail to attach, and the policy implementation should record\na `ResolvedRefs` or similar Condition in the Policy's status.",
              "maxLength": 253,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
              "type": "string"
            }
          },
          "required": [
            "group",
            "kind",
            "name"
          ],
          "type": "object",
          "x-kubernetes-validations": [
            {
              "message": "Invalid targetRef.group. The only supported value is 'gateway.networking.k8s.io'",
              "rule": "self.group == 'gateway.networking.k8s.io'"
            },
            {
              "message": "Invalid targetRef.kind. The only supported values are 'HTTPRoute' and 'Gateway'",
              "rule": "self.kind == 'HTTPRoute' || self.kind == 'Gateway'"
            }
          ]
        },
        "when": {
          "description": "Overall conditions for the policy to be enforced.\nIf omitted, the policy will be enforced at all requests to the protected routes.\nIf present, all conditions must match for the policy to be enforced.",
          "items": {
            "description": "Predicate defines one CEL expression that must be evaluated to bool",
            "properties": {
              "predicate": {
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "predicate"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "targetRef"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "Implicit and explicit defaults are mutually exclusive",
          "rule": "!(has(self.defaults) \u0026\u0026 has(self.limits))"
        },
        {
          "message": "Overrides and explicit defaults are mutually exclusive",
          "rule": "!(has(self.defaults) \u0026\u0026 has(self.overrides))"
        },
        {
          "message": "Overrides and implicit defaults are mutually exclusive",
          "rule": "!(has(self.overrides) \u0026\u0026 has(self.limits))"
        },
        {
          "message": "At least one spec.limits must be defined",
          "rule": "!(has(self.overrides) || has(self.defaults)) ? has(self.limits) \u0026\u0026 size(self.limits) \u003e 0 : true"
        },
        {
          "message": "At least one spec.overrides.limits must be defined",
          "rule": "has(self.overrides) ? has(self.overrides.limits) \u0026\u0026 size(self.overrides.limits) \u003e 0 : true"
        },
        {
          "message": "At least one spec.defaults.limits must be defined",
          "rule": "has(self.defaults) ? has(self.defaults.limits) \u0026\u0026 size(self.defaults.limits) \u003e 0 : true"
        }
      ]
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Represents the observations of a foo's current state.\nKnown .status.conditions.type are: \"Available\"",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration reflects the generation of the most recently observed spec.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "kuadrant.io",
      "kind": "RateLimitPolicy",
      "version": "v1"
    }
  ]
}