{
  "description": "Cluster contains information to allow an exec plugin to communicate with the kubernetes cluster being authenticated to.\n\nTo ensure that this struct contains everything someone would need to communicate with a kubernetes cluster (just like they would via a kubeconfig), the fields should shadow \"k8s.io/client-go/tools/clientcmd/api/v1\".Cluster, with the exception of CertificateAuthority, since CA data will always be passed to the plugin as bytes.",
  "properties": {
    "certificate-authority-data": {
      "description": "CAData contains PEM-encoded certificate authority certificates. If empty, system roots should be used.",
      "format": "byte",
      "type": "string",
      "x-kubernetes-list-type": "atomic"
    },
    "config": {
      "$ref": "../pkg.apimachinery.k8s.io/rawextension_runtime.json",
      "description": "Config holds additional config data that is specific to the exec plugin with regards to the cluster being authenticated to.\n\nThis data is sourced from the clientcmd Cluster object's extensions[client.authentication.k8s.io/exec] field:\n\nclusters: - name: my-cluster\n  cluster:\n    ...\n    extensions:\n    - name: client.authentication.k8s.io/exec  # reserved extension name for per cluster exec config\n      extension:\n        audience: 06e3fbd18de8  # arbitrary config\n\nIn some environments, the user config may be exactly the same across many clusters (i.e. call this exec plugin) minus some details that are specific to each cluster such as the audience.  This field allows the per cluster config to be directly specified with the cluster info.  Using this field to store secret data is not recommended as one of the prime benefits of exec plugins is that no secrets need to be stored directly in the kubeconfig."
    },
    "disable-compression": {
      "description": "DisableCompression allows client to opt-out of response compression for all requests to the server. This is useful to speed up requests (specifically lists) when client-server network bandwidth is ample, by saving time on compression (server-side) and decompression (client-side): https://github.com/kubernetes/kubernetes/issues/112296.",
      "type": "boolean"
    },
    "insecure-skip-tls-verify": {
      "description": "InsecureSkipTLSVerify skips the validity check for the server's certificate. This will make your HTTPS connections insecure.",
      "type": "boolean"
    },
    "proxy-url": {
      "description": "ProxyURL is the URL to the proxy to be used for all requests to this cluster.",
      "type": "string"
    },
    "server": {
      "default": "",
      "description": "Server is the address of the kubernetes cluster (https://hostname:port).",
      "type": "string"
    },
    "tls-server-name": {
      "description": "TLSServerName is passed to the server for SNI and is used in the client to check server certificates against. If ServerName is empty, the hostname used to contact the server is used.",
      "type": "string"
    }
  },
  "required": [
    "server"
  ],
  "type": "object"
}