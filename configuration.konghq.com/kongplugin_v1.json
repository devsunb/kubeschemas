{
  "description": "KongPlugin is the Schema for the kongplugins API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "configuration.konghq.com/v1"
      ],
      "type": "string"
    },
    "config": {
      "description": "Config contains the plugin configuration.",
      "type": "object",
      "x-kubernetes-preserve-unknown-fields": true
    },
    "configFrom": {
      "description": "ConfigFrom references a secret containing the plugin configuration.",
      "properties": {
        "secretKeyRef": {
          "description": "SecretValueFromSource represents the source of a secret value",
          "properties": {
            "key": {
              "description": "the key containing the value",
              "type": "string"
            },
            "name": {
              "description": "the secret containing the key",
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "consumerRef": {
      "description": "ConsumerRef is a reference to a particular consumer",
      "type": "string"
    },
    "disabled": {
      "description": "Disabled set if the plugin is disabled or not",
      "type": "boolean"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "KongPlugin"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "ordering": {
      "description": "Ordering overrides the normal plugin execution order",
      "properties": {
        "after": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order",
          "type": "object"
        },
        "before": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order",
          "type": "object"
        }
      },
      "type": "object"
    },
    "plugin": {
      "description": "PluginName is the name of the plugin to which to apply the config",
      "type": "string"
    },
    "protocols": {
      "description": "Protocols configures plugin to run on requests received on specific protocols.",
      "items": {
        "enum": [
          "http",
          "https",
          "grpc",
          "grpcs",
          "tcp",
          "tls",
          "udp"
        ],
        "type": "string"
      },
      "type": "array"
    },
    "run_on": {
      "description": "RunOn configures the plugin to run on the first or the second or both nodes in case of a service mesh deployment.",
      "enum": [
        "first",
        "second",
        "all"
      ],
      "type": "string"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "configuration.konghq.com",
      "kind": "KongPlugin",
      "version": "v1"
    }
  ]
}