{
  "description": "Dataset is the Schema for the datasets API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "data.fluid.io/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "Dataset"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "DatasetSpec defines the desired state of Dataset",
      "properties": {
        "accessModes": {
          "description": "AccessModes contains all ways the volume backing the PVC can be mounted",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dataRestoreLocation": {
          "description": "DataRestoreLocation is the location to load data of dataset  been backuped",
          "properties": {
            "nodeName": {
              "description": "NodeName describes the nodeName of restore if Path is  in the form of local://subpath",
              "type": "string"
            },
            "path": {
              "description": "Path describes the path of restore, in the form of  local://subpath or pvc://\u003cpvcName\u003e/subpath",
              "type": "string"
            }
          },
          "type": "object"
        },
        "mounts": {
          "description": "Mount Points to be mounted on cache runtime. \u003cbr\u003e\nThis field can be empty because some runtimes don't need to mount external storage (e.g.\n\u003ca href=\"https://v6d.io/\"\u003eVineyard\u003c/a\u003e).",
          "items": {
            "description": "Mount describes a mounting. \u003cbr\u003e\nRefer to \u003ca href=\"https://docs.alluxio.io/os/user/stable/en/ufs/S3.html\"\u003eAlluxio Storage Integrations\u003c/a\u003e for more info",
            "properties": {
              "encryptOptions": {
                "description": "The secret information",
                "items": {
                  "properties": {
                    "name": {
                      "description": "The name of encryptOption",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "The valueFrom of encryptOption",
                      "properties": {
                        "secretKeyRef": {
                          "description": "The encryptInfo obtained from secret",
                          "properties": {
                            "key": {
                              "description": "The required key in the secret",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of required secret",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "mountPoint": {
                "description": "MountPoint is the mount point of source.",
                "minLength": 5,
                "type": "string"
              },
              "name": {
                "description": "The name of mount",
                "minLength": 0,
                "type": "string"
              },
              "options": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The Mount Options. \u003cbr\u003e\nRefer to \u003ca href=\"https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html\"\u003eMount Options\u003c/a\u003e.  \u003cbr\u003e\nThe option has Prefix 'fs.' And you can Learn more from\n\u003ca href=\"https://docs.alluxio.io/os/user/stable/en/ufs/S3.html\"\u003eThe Storage Integrations\u003c/a\u003e",
                "type": "object"
              },
              "path": {
                "description": "The path of mount, if not set will be /{Name}",
                "type": "string"
              },
              "readOnly": {
                "description": "Optional: Defaults to false (read-write).",
                "type": "boolean"
              },
              "shared": {
                "description": "Optional: Defaults to false (shared).",
                "type": "boolean"
              }
            },
            "required": [
              "mountPoint"
            ],
            "type": "object"
          },
          "minItems": 1,
          "type": "array"
        },
        "nodeAffinity": {
          "description": "NodeAffinity defines constraints that limit what nodes this dataset can be cached to.\nThis field influences the scheduling of pods that use the cached dataset.",
          "properties": {
            "required": {
              "description": "Required specifies hard node constraints that must be met.",
              "properties": {
                "nodeSelectorTerms": {
                  "description": "Required. A list of node selector terms. The terms are ORed.",
                  "items": {
                    "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                    "properties": {
                      "matchExpressions": {
                        "description": "A list of node selector requirements by node's labels.",
                        "items": {
                          "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                          "properties": {
                            "key": {
                              "description": "The label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                              "type": "string"
                            },
                            "values": {
                              "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "key",
                            "operator"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "matchFields": {
                        "description": "A list of node selector requirements by node's fields.",
                        "items": {
                          "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                          "properties": {
                            "key": {
                              "description": "The label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                              "type": "string"
                            },
                            "values": {
                              "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "key",
                            "operator"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic"
                  },
                  "type": "array"
                }
              },
              "required": [
                "nodeSelectorTerms"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "The owner of the dataset",
          "properties": {
            "gid": {
              "description": "The gid to run the alluxio runtime",
              "format": "int64",
              "type": "integer"
            },
            "group": {
              "description": "The group name to run the alluxio runtime",
              "type": "string"
            },
            "uid": {
              "description": "The uid to run the alluxio runtime",
              "format": "int64",
              "type": "integer"
            },
            "user": {
              "description": "The user name to run the alluxio runtime",
              "type": "string"
            }
          },
          "required": [
            "gid",
            "group",
            "uid",
            "user"
          ],
          "type": "object"
        },
        "placement": {
          "description": "Manage switch for opening Multiple datasets single node deployment or not\nTODO(xieydd) In future, evaluate node resources and runtime resources to decide whether to turn them on",
          "enum": [
            "Exclusive",
            "",
            "Shared"
          ],
          "type": "string"
        },
        "runtimes": {
          "description": "Runtimes for supporting dataset (e.g. AlluxioRuntime)",
          "items": {
            "description": "Runtime describes a runtime to be used to support dataset",
            "properties": {
              "category": {
                "description": "Category the runtime object belongs to (e.g. Accelerate)",
                "type": "string"
              },
              "masterReplicas": {
                "description": "Runtime master replicas",
                "format": "int32",
                "type": "integer"
              },
              "name": {
                "description": "Name of the runtime object",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace of the runtime object",
                "type": "string"
              },
              "type": {
                "description": "Runtime object's type (e.g. Alluxio)",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "sharedEncryptOptions": {
          "description": "SharedEncryptOptions is the encryptOption to all mount",
          "items": {
            "properties": {
              "name": {
                "description": "The name of encryptOption",
                "type": "string"
              },
              "valueFrom": {
                "description": "The valueFrom of encryptOption",
                "properties": {
                  "secretKeyRef": {
                    "description": "The encryptInfo obtained from secret",
                    "properties": {
                      "key": {
                        "description": "The required key in the secret",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of required secret",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "sharedOptions": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "SharedOptions is the options to all mount",
          "type": "object"
        },
        "tolerations": {
          "description": "If specified, the pod's tolerations.",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "format": "int64",
                "type": "integer"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "status": {
      "description": "DatasetStatus defines the observed state of Dataset",
      "properties": {
        "cacheStates": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "CacheStatus represents the total resources of the dataset.",
          "type": "object"
        },
        "conditions": {
          "description": "Conditions is an array of current observed conditions.",
          "items": {
            "description": "Condition describes the state of the cache at a certain point.",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "lastUpdateTime": {
                "description": "The last time this condition was updated.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of cache condition.",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "dataBackupRef": {
          "description": "DataBackupRef specifies the running Backup job that targets this Dataset.\nThis is mainly used as a lock to prevent concurrent DataBackup jobs.\nDeprecated, use OperationRef instead",
          "type": "string"
        },
        "dataLoadRef": {
          "description": "DataLoadRef specifies the running DataLoad job that targets this Dataset.\nThis is mainly used as a lock to prevent concurrent DataLoad jobs.\nDeprecated, use OperationRef instead",
          "type": "string"
        },
        "datasetRef": {
          "description": "DatasetRef specifies the datasets namespaced name mounting this Dataset.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fileNum": {
          "description": "FileNum represents the file numbers of the dataset",
          "type": "string"
        },
        "hcfs": {
          "description": "HCFSStatus represents hcfs info",
          "properties": {
            "endpoint": {
              "description": "Endpoint for accessing",
              "type": "string"
            },
            "underlayerFileSystemVersion": {
              "description": "Underlayer HCFS Compatible Version",
              "type": "string"
            }
          },
          "type": "object"
        },
        "mounts": {
          "description": "the info of mount points have been mounted",
          "items": {
            "description": "Mount describes a mounting. \u003cbr\u003e\nRefer to \u003ca href=\"https://docs.alluxio.io/os/user/stable/en/ufs/S3.html\"\u003eAlluxio Storage Integrations\u003c/a\u003e for more info",
            "properties": {
              "encryptOptions": {
                "description": "The secret information",
                "items": {
                  "properties": {
                    "name": {
                      "description": "The name of encryptOption",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "The valueFrom of encryptOption",
                      "properties": {
                        "secretKeyRef": {
                          "description": "The encryptInfo obtained from secret",
                          "properties": {
                            "key": {
                              "description": "The required key in the secret",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of required secret",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "mountPoint": {
                "description": "MountPoint is the mount point of source.",
                "minLength": 5,
                "type": "string"
              },
              "name": {
                "description": "The name of mount",
                "minLength": 0,
                "type": "string"
              },
              "options": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The Mount Options. \u003cbr\u003e\nRefer to \u003ca href=\"https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html\"\u003eMount Options\u003c/a\u003e.  \u003cbr\u003e\nThe option has Prefix 'fs.' And you can Learn more from\n\u003ca href=\"https://docs.alluxio.io/os/user/stable/en/ufs/S3.html\"\u003eThe Storage Integrations\u003c/a\u003e",
                "type": "object"
              },
              "path": {
                "description": "The path of mount, if not set will be /{Name}",
                "type": "string"
              },
              "readOnly": {
                "description": "Optional: Defaults to false (read-write).",
                "type": "boolean"
              },
              "shared": {
                "description": "Optional: Defaults to false (shared).",
                "type": "boolean"
              }
            },
            "required": [
              "mountPoint"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "operationRef": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "OperationRef specifies the Operation that targets this Dataset.\nThis is mainly used as a lock to prevent concurrent same Operation jobs.",
          "type": "object"
        },
        "phase": {
          "description": "Dataset Phase. One of the four phases: `Pending`, `Bound`, `NotBound` and `Failed`",
          "type": "string"
        },
        "runtimes": {
          "description": "Runtimes for supporting dataset",
          "items": {
            "description": "Runtime describes a runtime to be used to support dataset",
            "properties": {
              "category": {
                "description": "Category the runtime object belongs to (e.g. Accelerate)",
                "type": "string"
              },
              "masterReplicas": {
                "description": "Runtime master replicas",
                "format": "int32",
                "type": "integer"
              },
              "name": {
                "description": "Name of the runtime object",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace of the runtime object",
                "type": "string"
              },
              "type": {
                "description": "Runtime object's type (e.g. Alluxio)",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "ufsTotal": {
          "description": "Total in GB of dataset in the cluster",
          "type": "string"
        }
      },
      "required": [
        "conditions"
      ],
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "data.fluid.io",
      "kind": "Dataset",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": []
}