{
  "description": "Tenant is the Schema for the tenants API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "ys.jibudata.com/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "Tenant"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "TenantSpec defines the desired state of Tenant",
      "properties": {
        "contact": {
          "description": "Contact provides ways to connect users of tenant, such as email or telphone",
          "type": "string"
        },
        "defaultBackupStorage": {
          "description": "DefaultBackupStorage provides default backup storages of a tenant for backup/restore",
          "type": "string"
        },
        "desc": {
          "description": "Desc provides detailed description",
          "type": "string"
        },
        "displayName": {
          "description": "DisplayName is human-readable name",
          "type": "string"
        },
        "isExpired": {
          "description": "IsExpired indicts if the resources from tenant can be reclaimed",
          "type": "boolean"
        },
        "orgName": {
          "description": "OrgName is organization name of a tenant",
          "type": "string"
        }
      },
      "type": "object"
    },
    "status": {
      "description": "TenantStatus defines the observed state of Tenant",
      "properties": {
        "conditions": {
          "description": "Conditions describes the detailed state of Tenant",
          "items": {
            "description": "Condition represents the state of the operator's reconciliation functionality.",
            "properties": {
              "lastHeartbeatTime": {
                "format": "date-time",
                "type": "string"
              },
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "description": "ConditionType is the state of the operator's reconciliation functionality.",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "errors": {
          "items": {
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "params": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "severity": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "phase": {
          "description": "Phase describes the overall status of Tenant",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "ys.jibudata.com",
      "kind": "Tenant",
      "version": "v1alpha1"
    }
  ]
}