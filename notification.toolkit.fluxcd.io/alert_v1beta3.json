{
  "description": "Alert is the Schema for the alerts API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "notification.toolkit.fluxcd.io/v1beta3"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "Alert"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "AlertSpec defines an alerting rule for events involving a list of objects.",
      "properties": {
        "eventMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "EventMetadata is an optional field for adding metadata to events dispatched by the\ncontroller. This can be used for enhancing the context of the event. If a field\nwould override one already present on the original event as generated by the emitter,\nthen the override doesn't happen, i.e. the original value is preserved, and an info\nlog is printed.",
          "type": "object"
        },
        "eventSeverity": {
          "default": "info",
          "description": "EventSeverity specifies how to filter events based on severity.\nIf set to 'info' no events will be filtered.",
          "enum": [
            "info",
            "error"
          ],
          "type": "string"
        },
        "eventSources": {
          "description": "EventSources specifies how to filter events based\non the involved object kind, name and namespace.",
          "items": {
            "description": "CrossNamespaceObjectReference contains enough information to let you locate the\ntyped referenced object at cluster level",
            "properties": {
              "apiVersion": {
                "description": "API version of the referent",
                "type": "string"
              },
              "kind": {
                "description": "Kind of the referent",
                "enum": [
                  "Bucket",
                  "GitRepository",
                  "Kustomization",
                  "HelmRelease",
                  "HelmChart",
                  "HelmRepository",
                  "ImageRepository",
                  "ImagePolicy",
                  "ImageUpdateAutomation",
                  "OCIRepository"
                ],
                "type": "string"
              },
              "matchLabels": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\nMatchLabels requires the name to be set to `*`.",
                "type": "object"
              },
              "name": {
                "description": "Name of the referent\nIf multiple resources are targeted `*` may be set.",
                "maxLength": 53,
                "minLength": 1,
                "type": "string"
              },
              "namespace": {
                "description": "Namespace of the referent",
                "maxLength": 53,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "kind",
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "exclusionList": {
          "description": "ExclusionList specifies a list of Golang regular expressions\nto be used for excluding messages.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inclusionList": {
          "description": "InclusionList specifies a list of Golang regular expressions\nto be used for including messages.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "providerRef": {
          "description": "ProviderRef specifies which Provider this Alert should use.",
          "properties": {
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "summary": {
          "description": "Summary holds a short description of the impact and affected cluster.",
          "maxLength": 255,
          "type": "string"
        },
        "suspend": {
          "description": "Suspend tells the controller to suspend subsequent\nevents handling for this Alert.",
          "type": "boolean"
        }
      },
      "required": [
        "eventSources",
        "providerRef"
      ],
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "notification.toolkit.fluxcd.io",
      "kind": "Alert",
      "version": "v1beta3"
    }
  ]
}