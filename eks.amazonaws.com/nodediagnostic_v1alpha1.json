{
  "description": "The name of the NodeDiagnostic resource is meant to match the name of the\nnode which should perform the diagnostic tasks",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "eks.amazonaws.com/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "NodeDiagnostic"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "properties": {
        "logCapture": {
          "description": "LogCapture is a definition for a diagnostic task that will package relevant\nlogs and stats into a tarball and deliver it to a provided destination.",
          "properties": {
            "categories": {
              "default": [
                "All"
              ],
              "description": "Categories are log source groups for the LogCapture task.",
              "items": {
                "description": "LogCategory is a grouping of log sources to read from when performing a\nLogCapture task.",
                "enum": [
                  "Base",
                  "Device",
                  "Networking",
                  "Runtime",
                  "System",
                  "All"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "destination": {
              "description": "UploadDestination is a URL describing where to deliver a diagnostic artifact.",
              "type": "string"
            }
          },
          "required": [
            "destination"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "status": {
      "properties": {
        "captureStatuses": {
          "items": {
            "description": "CaptureStatus describes the type and state of a capture task.",
            "properties": {
              "state": {
                "properties": {
                  "completed": {
                    "properties": {
                      "finishedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "startedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "finishedAt",
                      "message",
                      "reason",
                      "startedAt"
                    ],
                    "type": "object"
                  },
                  "running": {
                    "properties": {
                      "startedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "startedAt"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "The set of diagnostic tasks supported by the NodeDiagnostic resource.",
                "type": "string"
              }
            },
            "required": [
              "state",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "conditions": {
          "items": {
            "description": "Condition aliases the upstream type and adds additional helper methods",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "eks.amazonaws.com",
      "kind": "NodeDiagnostic",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": []
}