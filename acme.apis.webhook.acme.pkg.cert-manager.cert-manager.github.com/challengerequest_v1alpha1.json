{
  "description": "ChallengeRequest is a payload that can be sent to external ACME webhook solvers in order to 'Present' or 'CleanUp' a challenge with an ACME server.",
  "properties": {
    "action": {
      "default": "",
      "description": "Action is one of 'present' or 'cleanup'. If the action is 'present', the record will be presented with the solving service. If the action is 'cleanup', the record will be cleaned up with the solving service.",
      "type": "string"
    },
    "allowAmbientCredentials": {
      "default": false,
      "description": "AllowAmbientCredentials advises webhook implementations that they can use 'ambient credentials' for authenticating with their respective DNS provider services. This field SHOULD be honoured by all DNS webhook implementations, but in certain instances where it does not make sense to honour this option, an implementation may ignore it.",
      "type": "boolean"
    },
    "config": {
      "allOf": [
        {
          "$ref": "../apiextensions.apis.pkg.apiextensions-apiserver.k8s.io/json_v1.json"
        }
      ],
      "description": "Config contains unstructured JSON configuration data that the webhook implementation can unmarshal in order to fetch secrets or configure connection details etc. Secret values should not be passed in this field, in favour of references to Kubernetes Secret resources that the webhook can fetch."
    },
    "dnsName": {
      "default": "",
      "description": "DNSName is the name of the domain that is actually being validated, as requested by the user on the Certificate resource. This will be of the form 'example.com' from normal hostnames, and '*.example.com' for wildcards.",
      "type": "string"
    },
    "key": {
      "default": "",
      "description": "Key is the key that should be presented. This key will already be signed by the account that owns the challenge. For DNS01, this is the key that should be set for the TXT record for ResolveFQDN.",
      "type": "string"
    },
    "resolvedFQDN": {
      "description": "ResolvedFQDN is the fully-qualified domain name that should be updated/presented after resolving all CNAMEs. This should be honoured when using the DNS01 solver type. This will be of the form '_acme-challenge.example.com.'.",
      "type": "string"
    },
    "resolvedZone": {
      "description": "ResolvedZone is the zone encompassing the ResolvedFQDN. This is included as part of the ChallengeRequest so that webhook implementers do not need to implement their own SOA recursion logic. This indicates the zone that the provided FQDN is encompassed within, determined by performing SOA record queries for each part of the FQDN until an authoritative zone is found. This will be of the form 'example.com.'.",
      "type": "string"
    },
    "resourceNamespace": {
      "default": "",
      "description": "ResourceNamespace is the namespace containing resources that are referenced in the providers config. If this request is solving for an Issuer resource, this will be the namespace of the Issuer. If this request is solving for a ClusterIssuer resource, this will be the configured 'cluster resource namespace'",
      "type": "string"
    },
    "type": {
      "default": "",
      "description": "Type is the type of ACME challenge. Only dns-01 is currently supported.",
      "type": "string"
    },
    "uid": {
      "default": "",
      "description": "UID is an identifier for the individual request/response. It allows us to distinguish instances of requests which are otherwise identical (parallel requests, requests when earlier requests did not modify etc) The UID is meant to track the round trip (request/response) between the KAS and the WebHook, not the user request. It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.",
      "type": "string"
    }
  },
  "required": [
    "uid",
    "action",
    "type",
    "dnsName",
    "key",
    "resourceNamespace",
    "allowAmbientCredentials"
  ],
  "type": "object"
}