{
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "kubeovn.io/v1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "Vpc"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "properties": {
        "bfdPort": {
          "properties": {
            "enabled": {
              "default": false,
              "type": "boolean"
            },
            "ip": {
              "anyOf": [
                {
                  "pattern": "^$"
                },
                {
                  "pattern": "^(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])$"
                },
                {
                  "pattern": "^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|:)))$"
                },
                {
                  "pattern": "^(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5]),((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|:)))$"
                },
                {
                  "pattern": "^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|:))),(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])$"
                }
              ],
              "type": "string"
            },
            "nodeSelector": {
              "properties": {
                "matchExpressions": {
                  "items": {
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "enum": [
                          "In",
                          "NotIn",
                          "Exists",
                          "DoesNotExist"
                        ],
                        "type": "string"
                      },
                      "values": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "key",
                      "operator"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object",
          "x-kubernetes-validations": [
            {
              "message": "Port IP must be set when BFD Port is enabled",
              "rule": "self.enabled == false || self.ip != ''"
            }
          ]
        },
        "defaultSubnet": {
          "type": "string"
        },
        "enableBfd": {
          "type": "boolean"
        },
        "enableExternal": {
          "type": "boolean"
        },
        "extraExternalSubnets": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "namespaces": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "policyRoutes": {
          "items": {
            "properties": {
              "action": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "nextHopIP": {
                "type": "string"
              },
              "priority": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "staticRoutes": {
          "items": {
            "properties": {
              "bfdId": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "ecmpMode": {
                "type": "string"
              },
              "nextHopIP": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "routeTable": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "vpcPeerings": {
          "items": {
            "properties": {
              "localConnectIP": {
                "type": "string"
              },
              "remoteVpc": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "status": {
      "properties": {
        "bfdPort": {
          "properties": {
            "ip": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nodes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "conditions": {
          "items": {
            "properties": {
              "lastTransitionTime": {
                "type": "string"
              },
              "lastUpdateTime": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "default": {
          "type": "boolean"
        },
        "defaultLogicalSwitch": {
          "type": "string"
        },
        "enableBfd": {
          "type": "boolean"
        },
        "enableExternal": {
          "type": "boolean"
        },
        "extraExternalSubnets": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "router": {
          "type": "string"
        },
        "sctpLoadBalancer": {
          "type": "string"
        },
        "sctpSessionLoadBalancer": {
          "type": "string"
        },
        "standby": {
          "type": "boolean"
        },
        "subnets": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tcpLoadBalancer": {
          "type": "string"
        },
        "tcpSessionLoadBalancer": {
          "type": "string"
        },
        "udpLoadBalancer": {
          "type": "string"
        },
        "udpSessionLoadBalancer": {
          "type": "string"
        },
        "vpcPeerings": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "kubeovn.io",
      "kind": "Vpc",
      "version": "v1"
    }
  ]
}