{
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "kubeovn.io/v1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "VpcEgressGateway"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "properties": {
        "bfd": {
          "properties": {
            "enabled": {
              "default": false,
              "type": "boolean"
            },
            "minRX": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            },
            "minTX": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            },
            "multiplier": {
              "default": 3,
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "externalIPs": {
          "items": {
            "oneOf": [
              {
                "format": "ipv4"
              },
              {
                "format": "ipv6"
              },
              {
                "pattern": "^(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5]),((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|:)))$"
              },
              {
                "pattern": "^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|:))),(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])$"
              }
            ],
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "externalSubnet": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "internalIPs": {
          "items": {
            "oneOf": [
              {
                "format": "ipv4"
              },
              {
                "format": "ipv6"
              },
              {
                "pattern": "^(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5]),((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|:)))$"
              },
              {
                "pattern": "^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|:))),(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])$"
              }
            ],
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "internalSubnet": {
          "type": "string"
        },
        "nodeSelector": {
          "items": {
            "properties": {
              "matchExpressions": {
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "operator": {
                      "enum": [
                        "In",
                        "NotIn",
                        "Exists",
                        "DoesNotExist",
                        "Gt",
                        "Lt"
                      ],
                      "type": "string"
                    },
                    "values": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "set"
                    }
                  },
                  "required": [
                    "key",
                    "operator"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "matchFields": {
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "operator": {
                      "enum": [
                        "In",
                        "NotIn",
                        "Exists",
                        "DoesNotExist",
                        "Gt",
                        "Lt"
                      ],
                      "type": "string"
                    },
                    "values": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "set"
                    }
                  },
                  "required": [
                    "key",
                    "operator"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "matchLabels": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "policies": {
          "items": {
            "properties": {
              "ipBlocks": {
                "items": {
                  "anyOf": [
                    {
                      "format": "ipv4"
                    },
                    {
                      "format": "ipv6"
                    },
                    {
                      "format": "cidr"
                    }
                  ],
                  "type": "string"
                },
                "type": "array",
                "x-kubernetes-list-type": "set"
              },
              "snat": {
                "default": false,
                "type": "boolean"
              },
              "subnets": {
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "type": "array",
                "x-kubernetes-list-type": "set"
              }
            },
            "type": "object",
            "x-kubernetes-validations": [
              {
                "message": "Each policy MUST have at least one ipBlock or subnet",
                "rule": "size(self.ipBlocks) != 0 || size(self.subnets) != 0"
              }
            ]
          },
          "minItems": 1,
          "type": "array"
        },
        "prefix": {
          "anyOf": [
            {
              "pattern": "^$"
            },
            {
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*[-\\.]?$"
            }
          ],
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "This field is immutable.",
              "rule": "self == oldSelf"
            }
          ]
        },
        "replicas": {
          "default": 1,
          "format": "int32",
          "maximum": 10,
          "minimum": 1,
          "type": "integer"
        },
        "vpc": {
          "type": "string"
        }
      },
      "required": [
        "externalSubnet",
        "policies"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "fieldPath": ".prefix",
          "message": "Size of Internal IPs MUST be equal to or greater than Replicas",
          "rule": "!has(self.prefix) || self.prefix == '' || self.prefix == oldSelf.prefix"
        },
        {
          "fieldPath": ".internalIPs",
          "message": "Size of Internal IPs MUST be equal to or greater than Replicas",
          "rule": "!has(self.internalIPs) || size(self.internalIPs) == 0 || size(self.internalIPs) \u003e= self.replicas"
        },
        {
          "fieldPath": ".externalIPs",
          "message": "Size of External IPs MUST be equal to or greater than Replicas",
          "rule": "!has(self.externalIPs) || size(self.externalIPs) == 0 || size(self.externalIPs) \u003e= self.replicas"
        }
      ]
    },
    "status": {
      "properties": {
        "conditions": {
          "items": {
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "lastUpdateTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "lastUpdateTime",
              "observedGeneration",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "externalIPs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "internalIPs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "labelSelector": {
          "type": "string"
        },
        "phase": {
          "default": "Pending",
          "enum": [
            "Pending",
            "Processing",
            "Completed"
          ],
          "type": "string"
        },
        "ready": {
          "default": false,
          "type": "boolean"
        },
        "replicas": {
          "format": "int32",
          "type": "integer"
        },
        "workload": {
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nodes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "conditions",
        "phase"
      ],
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "kubeovn.io",
      "kind": "VpcEgressGateway",
      "version": "v1"
    }
  ]
}