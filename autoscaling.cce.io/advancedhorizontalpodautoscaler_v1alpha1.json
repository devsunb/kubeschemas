{
  "description": "AdvancedHorizontalPodAutoscaler is the Schema for the advancedhorizontalpodautoscalers API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "autoscaling.cce.io/v1alpha1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "AdvancedHorizontalPodAutoscaler"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "AdvancedHorizontalPodAutoscalerSpec defines the desired state of advancedHorizontalPodAutoscaler",
      "properties": {
        "effectiveTime": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "maxReplicas": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "metrics": {
          "items": {
            "description": "MetricSpec specifies how to scale based on a single metric\n(only `type` and one other matching field should be set at once).",
            "properties": {
              "containerResource": {
                "description": "containerResource refers to a resource metric (such as those specified in\nrequests and limits) known to Kubernetes describing a single container in\neach pod of the current scale target (e.g. CPU or memory). Such metrics are\nbuilt in to Kubernetes, and have special scaling options on top of those\navailable to normal per-pod metrics using the \"pods\" source.\nThis is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.",
                "properties": {
                  "container": {
                    "description": "container is the name of the container in the pods of the scaling target",
                    "type": "string"
                  },
                  "name": {
                    "description": "name is the name of the resource in question.",
                    "type": "string"
                  },
                  "target": {
                    "description": "target specifies the target value for the given metric",
                    "properties": {
                      "averageUtilization": {
                        "description": "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type",
                        "format": "int32",
                        "type": "integer"
                      },
                      "averageValue": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "type": {
                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                        "type": "string"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "value is the target value of the metric (as a quantity).",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "container",
                  "name",
                  "target"
                ],
                "type": "object"
              },
              "external": {
                "description": "external refers to a global metric that is not associated\nwith any Kubernetes object. It allows autoscaling based on information\ncoming from components running outside of cluster\n(for example length of queue in cloud messaging service, or\nQPS from loadbalancer running outside of cluster).",
                "properties": {
                  "metric": {
                    "description": "metric identifies the target metric by name and selector",
                    "properties": {
                      "name": {
                        "description": "name is the name of the given metric",
                        "type": "string"
                      },
                      "selector": {
                        "description": "selector is the string-encoded form of a standard kubernetes label selector for the given metric\nWhen set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.\nWhen unset, just the metricName will be used to gather metrics.",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "target": {
                    "description": "target specifies the target value for the given metric",
                    "properties": {
                      "averageUtilization": {
                        "description": "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type",
                        "format": "int32",
                        "type": "integer"
                      },
                      "averageValue": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "type": {
                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                        "type": "string"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "value is the target value of the metric (as a quantity).",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "metric",
                  "target"
                ],
                "type": "object"
              },
              "object": {
                "description": "object refers to a metric describing a single kubernetes object\n(for example, hits-per-second on an Ingress object).",
                "properties": {
                  "describedObject": {
                    "description": "describedObject specifies the descriptions of a object,such as kind,name apiVersion",
                    "properties": {
                      "apiVersion": {
                        "description": "apiVersion is the API version of the referent",
                        "type": "string"
                      },
                      "kind": {
                        "description": "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      }
                    },
                    "required": [
                      "kind",
                      "name"
                    ],
                    "type": "object"
                  },
                  "metric": {
                    "description": "metric identifies the target metric by name and selector",
                    "properties": {
                      "name": {
                        "description": "name is the name of the given metric",
                        "type": "string"
                      },
                      "selector": {
                        "description": "selector is the string-encoded form of a standard kubernetes label selector for the given metric\nWhen set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.\nWhen unset, just the metricName will be used to gather metrics.",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "target": {
                    "description": "target specifies the target value for the given metric",
                    "properties": {
                      "averageUtilization": {
                        "description": "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type",
                        "format": "int32",
                        "type": "integer"
                      },
                      "averageValue": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "type": {
                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                        "type": "string"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "value is the target value of the metric (as a quantity).",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "describedObject",
                  "metric",
                  "target"
                ],
                "type": "object"
              },
              "pods": {
                "description": "pods refers to a metric describing each pod in the current scale target\n(for example, transactions-processed-per-second).  The values will be\naveraged together before being compared to the target value.",
                "properties": {
                  "metric": {
                    "description": "metric identifies the target metric by name and selector",
                    "properties": {
                      "name": {
                        "description": "name is the name of the given metric",
                        "type": "string"
                      },
                      "selector": {
                        "description": "selector is the string-encoded form of a standard kubernetes label selector for the given metric\nWhen set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.\nWhen unset, just the metricName will be used to gather metrics.",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "target": {
                    "description": "target specifies the target value for the given metric",
                    "properties": {
                      "averageUtilization": {
                        "description": "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type",
                        "format": "int32",
                        "type": "integer"
                      },
                      "averageValue": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "type": {
                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                        "type": "string"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "value is the target value of the metric (as a quantity).",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "metric",
                  "target"
                ],
                "type": "object"
              },
              "resource": {
                "description": "resource refers to a resource metric (such as those specified in\nrequests and limits) known to Kubernetes describing each pod in the\ncurrent scale target (e.g. CPU or memory). Such metrics are built in to\nKubernetes, and have special scaling options on top of those available\nto normal per-pod metrics using the \"pods\" source.",
                "properties": {
                  "name": {
                    "description": "name is the name of the resource in question.",
                    "type": "string"
                  },
                  "target": {
                    "description": "target specifies the target value for the given metric",
                    "properties": {
                      "averageUtilization": {
                        "description": "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type",
                        "format": "int32",
                        "type": "integer"
                      },
                      "averageValue": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "type": {
                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                        "type": "string"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "value is the target value of the metric (as a quantity).",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "target"
                ],
                "type": "object"
              },
              "type": {
                "description": "type is the type of metric source.  It should be one of \"ContainerResource\", \"External\",\n\"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object.\nNote: \"ContainerResource\" type is available on when the feature-gate\nHPAContainerMetrics is enabled",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          },
          "maxItems": 10,
          "type": "array"
        },
        "minReplicas": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "predictConfig": {
          "properties": {
            "predictWindowSeconds": {
              "description": "inference parameter. resource prepare time length",
              "format": "int32",
              "maximum": 3600,
              "minimum": 1,
              "type": "integer"
            },
            "quantile": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "parameter for inference, e.g., 0.95",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            },
            "stabilizationWindowSeconds": {
              "format": "int32",
              "maximum": 3600,
              "minimum": 0,
              "type": "integer"
            }
          },
          "required": [
            "predictWindowSeconds",
            "quantile",
            "stabilizationWindowSeconds"
          ],
          "type": "object"
        },
        "scaleTargetRef": {
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "apiVersion",
            "kind",
            "name"
          ],
          "type": "object"
        }
      },
      "required": [
        "maxReplicas",
        "minReplicas",
        "scaleTargetRef"
      ],
      "type": "object"
    },
    "status": {
      "description": "AdvancedHorizontalPodAutoscalerStatus defines the observed state of advancedHorizontalPodAutoscaler",
      "properties": {
        "conditions": {
          "description": "conditions is the set of conditions required for this autoscaler to scale its target,\nand indicates whether or not those conditions are met.",
          "items": {
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from\none status to another",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human-readable explanation containing details about\nthe transition",
                "type": "string"
              },
              "reason": {
                "description": "Reason is the reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition (True, False, Unknown)",
                "type": "string"
              },
              "type": {
                "description": "Type describes the current condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "currentReplicas": {
          "description": "CurrentReplicas is current number of replicas of pods managed by this autoscaler,\nas last seen by the autoscaler.",
          "format": "int32",
          "type": "integer"
        },
        "desiredReplicas": {
          "description": "DesiredReplicas is the desired number of replicas of pods managed by this autoscaler,\nas last calculated by the autoscaler.",
          "format": "int32",
          "type": "integer"
        },
        "lastScaleTime": {
          "description": "LastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods,\nused by the autoscaler to control how often the number of pods is changed.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "autoscaling.cce.io",
      "kind": "AdvancedHorizontalPodAutoscaler",
      "version": "v1alpha1"
    }
  ]
}